{
    "pipes": [],
    "interfaces": [
        {
            "name": "IUser",
            "id": "interface-IUser-e34cef3697beabce81f847a3a90018181039ea3e69d7ebcb13a089497640321e8034e3bc70f55493dd119a18bb4dca8d22e759834cd1bb8e9b24e159ea5657cb",
            "file": "src/app/shared/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n};\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _user: IUser | null = defaultUser;\r\n  get loggedIn(): boolean {\r\n    return !!this._user;\r\n  }\r\n\r\n  private _lastAuthenticatedPath: string = defaultPath;\r\n  set lastAuthenticatedPath(value: string) {\r\n    this._lastAuthenticatedPath = value;\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async logIn(email: string, password: string) {\r\n\r\n    try {\r\n      // Send request\r\n      this._user = { ...defaultUser, email };\r\n      this.router.navigate([this._lastAuthenticatedPath]);\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Authentication failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUser() {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n\r\n  async createAccount(email: string, password: string) {\r\n    try {\r\n      // Send request\r\n\r\n      this.router.navigate(['/create-account']);\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to create account\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async changePassword(email: string, recoveryCode: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to change password\"\r\n      }\r\n    }\r\n  }\r\n\r\n  async resetPassword(email: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to reset password\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async logOut() {\r\n    this._user = null;\r\n    this.router.navigate(['/login-form']);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const isLoggedIn = this.authService.loggedIn;\r\n    const isAuthForm = [\r\n      'login-form',\r\n      'reset-password',\r\n      'create-account',\r\n      'change-password/:recoveryCode'\r\n    ].includes(route.routeConfig?.path || defaultPath);\r\n\r\n   /* const isProfileForm = route.routeConfig?.path === 'profile';\r\n    const features:Promise<boolean> = this.getClientStartup().then(()=>{\r\n      return false;\r\n    });\r\n\r\n   await features.then((boo)=>{\r\n      if(isProfileForm && boo) return true;\r\n    })*/\r\n\r\n    if (isLoggedIn && isAuthForm) {\r\n      this.authService.lastAuthenticatedPath = defaultPath;\r\n      this.router.navigate([defaultPath]);\r\n      return false;\r\n    }\r\n\r\n    if (!isLoggedIn && !isAuthForm) {\r\n      this.router.navigate(['/login-form']);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      this.authService.lastAuthenticatedPath = route.routeConfig?.path || defaultPath;\r\n    }\r\n\r\n    return isLoggedIn || isAuthForm;\r\n  }\r\n}\r\n\r\n\r\ninterface ResponseFeatures {\r\n  altairFeatures: string[] | null;\r\n  webFeatures: string[] | null;\r\n  userPermissions?: string[] | null;\r\n  smSettings?: string[] | null;\r\n}\r\n\r\nexport interface StartupResponse {\r\n  features: ResponseFeatures;\r\n  preAuthUrl?: string;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "avatarUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ResponseFeatures",
            "id": "interface-ResponseFeatures-e34cef3697beabce81f847a3a90018181039ea3e69d7ebcb13a089497640321e8034e3bc70f55493dd119a18bb4dca8d22e759834cd1bb8e9b24e159ea5657cb",
            "file": "src/app/shared/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n};\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _user: IUser | null = defaultUser;\r\n  get loggedIn(): boolean {\r\n    return !!this._user;\r\n  }\r\n\r\n  private _lastAuthenticatedPath: string = defaultPath;\r\n  set lastAuthenticatedPath(value: string) {\r\n    this._lastAuthenticatedPath = value;\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async logIn(email: string, password: string) {\r\n\r\n    try {\r\n      // Send request\r\n      this._user = { ...defaultUser, email };\r\n      this.router.navigate([this._lastAuthenticatedPath]);\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Authentication failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUser() {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n\r\n  async createAccount(email: string, password: string) {\r\n    try {\r\n      // Send request\r\n\r\n      this.router.navigate(['/create-account']);\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to create account\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async changePassword(email: string, recoveryCode: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to change password\"\r\n      }\r\n    }\r\n  }\r\n\r\n  async resetPassword(email: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to reset password\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async logOut() {\r\n    this._user = null;\r\n    this.router.navigate(['/login-form']);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const isLoggedIn = this.authService.loggedIn;\r\n    const isAuthForm = [\r\n      'login-form',\r\n      'reset-password',\r\n      'create-account',\r\n      'change-password/:recoveryCode'\r\n    ].includes(route.routeConfig?.path || defaultPath);\r\n\r\n   /* const isProfileForm = route.routeConfig?.path === 'profile';\r\n    const features:Promise<boolean> = this.getClientStartup().then(()=>{\r\n      return false;\r\n    });\r\n\r\n   await features.then((boo)=>{\r\n      if(isProfileForm && boo) return true;\r\n    })*/\r\n\r\n    if (isLoggedIn && isAuthForm) {\r\n      this.authService.lastAuthenticatedPath = defaultPath;\r\n      this.router.navigate([defaultPath]);\r\n      return false;\r\n    }\r\n\r\n    if (!isLoggedIn && !isAuthForm) {\r\n      this.router.navigate(['/login-form']);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      this.authService.lastAuthenticatedPath = route.routeConfig?.path || defaultPath;\r\n    }\r\n\r\n    return isLoggedIn || isAuthForm;\r\n  }\r\n}\r\n\r\n\r\ninterface ResponseFeatures {\r\n  altairFeatures: string[] | null;\r\n  webFeatures: string[] | null;\r\n  userPermissions?: string[] | null;\r\n  smSettings?: string[] | null;\r\n}\r\n\r\nexport interface StartupResponse {\r\n  features: ResponseFeatures;\r\n  preAuthUrl?: string;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "altairFeatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[] | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "smSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[] | null",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "userPermissions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[] | null",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "webFeatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[] | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 165
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "StartupResponse",
            "id": "interface-StartupResponse-e34cef3697beabce81f847a3a90018181039ea3e69d7ebcb13a089497640321e8034e3bc70f55493dd119a18bb4dca8d22e759834cd1bb8e9b24e159ea5657cb",
            "file": "src/app/shared/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n};\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _user: IUser | null = defaultUser;\r\n  get loggedIn(): boolean {\r\n    return !!this._user;\r\n  }\r\n\r\n  private _lastAuthenticatedPath: string = defaultPath;\r\n  set lastAuthenticatedPath(value: string) {\r\n    this._lastAuthenticatedPath = value;\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async logIn(email: string, password: string) {\r\n\r\n    try {\r\n      // Send request\r\n      this._user = { ...defaultUser, email };\r\n      this.router.navigate([this._lastAuthenticatedPath]);\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Authentication failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUser() {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n\r\n  async createAccount(email: string, password: string) {\r\n    try {\r\n      // Send request\r\n\r\n      this.router.navigate(['/create-account']);\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to create account\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async changePassword(email: string, recoveryCode: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to change password\"\r\n      }\r\n    }\r\n  }\r\n\r\n  async resetPassword(email: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to reset password\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async logOut() {\r\n    this._user = null;\r\n    this.router.navigate(['/login-form']);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const isLoggedIn = this.authService.loggedIn;\r\n    const isAuthForm = [\r\n      'login-form',\r\n      'reset-password',\r\n      'create-account',\r\n      'change-password/:recoveryCode'\r\n    ].includes(route.routeConfig?.path || defaultPath);\r\n\r\n   /* const isProfileForm = route.routeConfig?.path === 'profile';\r\n    const features:Promise<boolean> = this.getClientStartup().then(()=>{\r\n      return false;\r\n    });\r\n\r\n   await features.then((boo)=>{\r\n      if(isProfileForm && boo) return true;\r\n    })*/\r\n\r\n    if (isLoggedIn && isAuthForm) {\r\n      this.authService.lastAuthenticatedPath = defaultPath;\r\n      this.router.navigate([defaultPath]);\r\n      return false;\r\n    }\r\n\r\n    if (!isLoggedIn && !isAuthForm) {\r\n      this.router.navigate(['/login-form']);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      this.authService.lastAuthenticatedPath = route.routeConfig?.path || defaultPath;\r\n    }\r\n\r\n    return isLoggedIn || isAuthForm;\r\n  }\r\n}\r\n\r\n\r\ninterface ResponseFeatures {\r\n  altairFeatures: string[] | null;\r\n  webFeatures: string[] | null;\r\n  userPermissions?: string[] | null;\r\n  smSettings?: string[] | null;\r\n}\r\n\r\nexport interface StartupResponse {\r\n  features: ResponseFeatures;\r\n  preAuthUrl?: string;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponseFeatures",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 171
                },
                {
                    "name": "preAuthUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 172
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppInfoService",
            "id": "injectable-AppInfoService-f72982f108ec251b70c377ab994406f9fbc3406f2ee4f84f27b0b454406cdf2850c61015c197fe67e3b8bd636cddaf9daac1aba6bb87235c5c7baaa4ae65fcec",
            "file": "src/app/shared/services/app-info.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppInfoService {\r\n  constructor() {}\r\n\r\n  public get title() {\r\n    return 'App Test Devextreme';\r\n  }\r\n\r\n  public get currentYear() {\r\n    return new Date().getFullYear();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 4
            },
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "",
                        "returnType": "",
                        "line": 7
                    }
                },
                "currentYear": {
                    "name": "currentYear",
                    "getSignature": {
                        "name": "currentYear",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-e34cef3697beabce81f847a3a90018181039ea3e69d7ebcb13a089497640321e8034e3bc70f55493dd119a18bb4dca8d22e759834cd1bb8e9b24e159ea5657cb",
            "file": "src/app/shared/services/auth.service.ts",
            "properties": [
                {
                    "name": "_lastAuthenticatedPath",
                    "defaultValue": "defaultPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_user",
                    "defaultValue": "defaultUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changePassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "recoveryCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "recoveryCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createAccount",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "logIn",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "resetPassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n};\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _user: IUser | null = defaultUser;\r\n  get loggedIn(): boolean {\r\n    return !!this._user;\r\n  }\r\n\r\n  private _lastAuthenticatedPath: string = defaultPath;\r\n  set lastAuthenticatedPath(value: string) {\r\n    this._lastAuthenticatedPath = value;\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async logIn(email: string, password: string) {\r\n\r\n    try {\r\n      // Send request\r\n      this._user = { ...defaultUser, email };\r\n      this.router.navigate([this._lastAuthenticatedPath]);\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Authentication failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUser() {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n\r\n  async createAccount(email: string, password: string) {\r\n    try {\r\n      // Send request\r\n\r\n      this.router.navigate(['/create-account']);\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to create account\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async changePassword(email: string, recoveryCode: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to change password\"\r\n      }\r\n    }\r\n  }\r\n\r\n  async resetPassword(email: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to reset password\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async logOut() {\r\n    this._user = null;\r\n    this.router.navigate(['/login-form']);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const isLoggedIn = this.authService.loggedIn;\r\n    const isAuthForm = [\r\n      'login-form',\r\n      'reset-password',\r\n      'create-account',\r\n      'change-password/:recoveryCode'\r\n    ].includes(route.routeConfig?.path || defaultPath);\r\n\r\n   /* const isProfileForm = route.routeConfig?.path === 'profile';\r\n    const features:Promise<boolean> = this.getClientStartup().then(()=>{\r\n      return false;\r\n    });\r\n\r\n   await features.then((boo)=>{\r\n      if(isProfileForm && boo) return true;\r\n    })*/\r\n\r\n    if (isLoggedIn && isAuthForm) {\r\n      this.authService.lastAuthenticatedPath = defaultPath;\r\n      this.router.navigate([defaultPath]);\r\n      return false;\r\n    }\r\n\r\n    if (!isLoggedIn && !isAuthForm) {\r\n      this.router.navigate(['/login-form']);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      this.authService.lastAuthenticatedPath = route.routeConfig?.path || defaultPath;\r\n    }\r\n\r\n    return isLoggedIn || isAuthForm;\r\n  }\r\n}\r\n\r\n\r\ninterface ResponseFeatures {\r\n  altairFeatures: string[] | null;\r\n  webFeatures: string[] | null;\r\n  userPermissions?: string[] | null;\r\n  smSettings?: string[] | null;\r\n}\r\n\r\nexport interface StartupResponse {\r\n  features: ResponseFeatures;\r\n  preAuthUrl?: string;\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "loggedIn": {
                    "name": "loggedIn",
                    "getSignature": {
                        "name": "loggedIn",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 19
                    }
                },
                "lastAuthenticatedPath": {
                    "name": "lastAuthenticatedPath",
                    "setSignature": {
                        "name": "lastAuthenticatedPath",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ScreenService",
            "id": "injectable-ScreenService-358d9231317cb9c34011aa3d6e57080c40b4c77585e97167f557726bf7b634bb20de6c2324ed8e9bc6863e804b7049f1671191e9ae93126c98bdec46fb9a3d33",
            "file": "src/app/shared/services/screen.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "isLargeScreen",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Output, Injectable, EventEmitter } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\n@Injectable()\r\nexport class ScreenService {\r\n  @Output() changed = new EventEmitter();\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {\r\n    this.breakpointObserver\r\n      .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large])\r\n      .subscribe(() => this.changed.next(true));\r\n  }\r\n\r\n  private isLargeScreen() {\r\n    const isLarge = this.breakpointObserver.isMatched(Breakpoints.Large);\r\n    const isXLarge = this.breakpointObserver.isMatched(Breakpoints.XLarge);\r\n\r\n    return isLarge || isXLarge;\r\n  }\r\n\r\n  public get sizes(): Record<string, boolean> {\r\n    return {\r\n      'screen-x-small': this.breakpointObserver.isMatched(Breakpoints.XSmall),\r\n      'screen-small': this.breakpointObserver.isMatched(Breakpoints.Small),\r\n      'screen-medium': this.breakpointObserver.isMatched(Breakpoints.Medium),\r\n      'screen-large': this.isLargeScreen(),\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "",
                        "returnType": "Record<string, boolean>",
                        "line": 21
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-0d904868aacbaf88b6c4a50e5b8954ca59e3076702b5b63e47c308a6fbedd908d9c2555c05f0f8071fc3ee358b0a953927a137973052a192b40e61dc6845844a",
            "file": "src/app/shared/services/theme.service.ts",
            "properties": [
                {
                    "name": "currentTheme",
                    "defaultValue": "getNextTheme()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Theme",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isDark",
                    "defaultValue": "new BehaviorSubject<boolean>(this.currentTheme === 'dark')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methods": [
                {
                    "name": "switchTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { BehaviorSubject } from 'rxjs';\r\nconst themes = ['light', 'dark'] as const;\r\nconst themeClassNamePrefix = 'dx-swatch-';\r\n\r\ntype Theme = typeof themes[number];\r\n\r\nfunction getNextTheme(theme?: Theme) {\r\n  return (theme && themes[themes.indexOf(theme) + 1]) || themes[0];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n\r\n  currentTheme: Theme = getNextTheme();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {\r\n    if (!this.document.querySelector('.app')?.className.includes(themeClassNamePrefix)) {\r\n      this.document.querySelector('.app')?.classList.add(themeClassNamePrefix + this.currentTheme);\r\n    }\r\n  }\r\n\r\n  isDark = new BehaviorSubject<boolean>(this.currentTheme === 'dark');\r\n\r\n  switchTheme() {\r\n    const currentTheme = this.currentTheme;\r\n    const newTheme = getNextTheme(this.currentTheme);\r\n    const isCurrentThemeDark = currentTheme === 'dark';\r\n\r\n    this.document.querySelector('.app')?.classList.replace(\r\n      themeClassNamePrefix + currentTheme,\r\n      themeClassNamePrefix + newTheme\r\n    );\r\n\r\n    const additionalClassNamePrefix = themeClassNamePrefix + 'additional';\r\n    const additionalClassNamePostfix = isCurrentThemeDark ? '-' + currentTheme : '';\r\n    const additionalClassName = `${additionalClassNamePrefix}${additionalClassNamePostfix}`\r\n\r\n    this.document.querySelector('.app')?.querySelector(`.${additionalClassName}`)?.classList\r\n      .replace(additionalClassName, additionalClassNamePrefix + (isCurrentThemeDark ? '' : '-dark'));\r\n\r\n    this.currentTheme = newTheme;\r\n    this.isDark.next(this.currentTheme === 'dark');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuardService",
            "id": "injectable-AuthGuardService-e34cef3697beabce81f847a3a90018181039ea3e69d7ebcb13a089497640321e8034e3bc70f55493dd119a18bb4dca8d22e759834cd1bb8e9b24e159ea5657cb",
            "file": "src/app/shared/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nconst defaultPath = '/';\r\nconst defaultUser = {\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n};\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _user: IUser | null = defaultUser;\r\n  get loggedIn(): boolean {\r\n    return !!this._user;\r\n  }\r\n\r\n  private _lastAuthenticatedPath: string = defaultPath;\r\n  set lastAuthenticatedPath(value: string) {\r\n    this._lastAuthenticatedPath = value;\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async logIn(email: string, password: string) {\r\n\r\n    try {\r\n      // Send request\r\n      this._user = { ...defaultUser, email };\r\n      this.router.navigate([this._lastAuthenticatedPath]);\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Authentication failed\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUser() {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true,\r\n        data: this._user\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n\r\n  async createAccount(email: string, password: string) {\r\n    try {\r\n      // Send request\r\n\r\n      this.router.navigate(['/create-account']);\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to create account\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async changePassword(email: string, recoveryCode: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to change password\"\r\n      }\r\n    }\r\n  }\r\n\r\n  async resetPassword(email: string) {\r\n    try {\r\n      // Send request\r\n\r\n      return {\r\n        isOk: true\r\n      };\r\n    }\r\n    catch {\r\n      return {\r\n        isOk: false,\r\n        message: \"Failed to reset password\"\r\n      };\r\n    }\r\n  }\r\n\r\n  async logOut() {\r\n    this._user = null;\r\n    this.router.navigate(['/login-form']);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const isLoggedIn = this.authService.loggedIn;\r\n    const isAuthForm = [\r\n      'login-form',\r\n      'reset-password',\r\n      'create-account',\r\n      'change-password/:recoveryCode'\r\n    ].includes(route.routeConfig?.path || defaultPath);\r\n\r\n   /* const isProfileForm = route.routeConfig?.path === 'profile';\r\n    const features:Promise<boolean> = this.getClientStartup().then(()=>{\r\n      return false;\r\n    });\r\n\r\n   await features.then((boo)=>{\r\n      if(isProfileForm && boo) return true;\r\n    })*/\r\n\r\n    if (isLoggedIn && isAuthForm) {\r\n      this.authService.lastAuthenticatedPath = defaultPath;\r\n      this.router.navigate([defaultPath]);\r\n      return false;\r\n    }\r\n\r\n    if (!isLoggedIn && !isAuthForm) {\r\n      this.router.navigate(['/login-form']);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      this.authService.lastAuthenticatedPath = route.routeConfig?.path || defaultPath;\r\n    }\r\n\r\n    return isLoggedIn || isAuthForm;\r\n  }\r\n}\r\n\r\n\r\ninterface ResponseFeatures {\r\n  altairFeatures: string[] | null;\r\n  webFeatures: string[] | null;\r\n  userPermissions?: string[] | null;\r\n  smSettings?: string[] | null;\r\n}\r\n\r\nexport interface StartupResponse {\r\n  features: ResponseFeatures;\r\n  preAuthUrl?: string;\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 123,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ff8038635bb4cd03cfdb346ee83b32cf439be930042dabe76ce862cdb0ff963ee2b16efa9f0c61ad8512698d901ca75833c080ff05867a51250d8111eb0cca96",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppInfoService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DxHttpModule",
                    "type": "module"
                },
                {
                    "name": "SideNavToolbarComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                },
                {
                    "name": "UnauthenticatedContentComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, RouterOutlet } from '@angular/router';\r\nimport { AuthService, ScreenService, AppInfoService } from './shared/services';\r\nimport { DxHttpModule } from 'devextreme-angular/http';\r\nimport { FooterComponent } from './shared/components';\r\nimport { UnauthenticatedContentComponent } from './unauthenticated-content';\r\nimport { SideNavOuterToolbarComponent as SideNavToolbarComponent } from './layouts';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    RouterModule,\r\n    RouterOutlet,\r\n    CommonModule,\r\n    DxHttpModule,\r\n    SideNavToolbarComponent,\r\n    FooterComponent,\r\n    UnauthenticatedContentComponent,\r\n  ],\r\n  providers: []\r\n})\r\nexport class AppComponent {\r\n  @HostBinding('class') get getClass() {\r\n    const sizeClassName = Object.keys(this.screen.sizes).filter(cl => this.screen.sizes[cl]).join(' ');\r\n    return `${sizeClassName} app` ;\r\n  }\r\n\r\n  constructor(private authService: AuthService, private screen: ScreenService, public appInfo: AppInfoService) { }\r\n\r\n  isAuthenticated() {\r\n    return this.authService.loggedIn;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appInfo",
                        "type": "AppInfoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appInfo",
                        "type": "AppInfoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "getClass": {
                    "name": "getClass",
                    "getSignature": {
                        "name": "getClass",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"isAuthenticated(); else unauthenticated\">\r\n  <app-side-nav-outer-toolbar title=\"{{appInfo.title}}\">\r\n    <router-outlet></router-outlet>\r\n    <app-footer>\r\n      Copyright © 2011-{{appInfo.currentYear}} {{appInfo.title}} Inc.\r\n      <br/>\r\n      All trademarks or registered trademarks are property of their respective owners.\r\n    </app-footer>\r\n  </app-side-nav-outer-toolbar>\r\n</ng-container>\r\n\r\n<ng-template #unauthenticated>\r\n  <app-unauthenticated-content></app-unauthenticated-content>\r\n</ng-template>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 328,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "ChangePasswordFormComponent",
            "id": "component-ChangePasswordFormComponent-1759ab2012f6b8bb35dca36f61f54015f89e80e097c9ba4e891419a6ec3d7925010eac40297503ba0bfd1c097505a4b899698ec2710f04887168d2c0bb7f9b6a",
            "file": "src/app/shared/components/change-password-form/change-password-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-change-passsword-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./change-password-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "confirmPassword",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "formData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "recoveryCode",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "DxFormModule",
                    "type": "module"
                },
                {
                    "name": "DxLoadIndicatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { ValidationCallbackData } from 'devextreme-angular/common';\r\nimport { DxFormModule } from 'devextreme-angular/ui/form';\r\nimport { DxLoadIndicatorModule } from 'devextreme-angular/ui/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { AuthService } from '../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-passsword-form',\r\n  templateUrl: './change-password-form.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    DxFormModule,\r\n    DxLoadIndicatorModule,\r\n  ]\r\n})\r\nexport class ChangePasswordFormComponent implements OnInit {\r\n  loading = false;\r\n  formData: any = {};\r\n  recoveryCode: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.recoveryCode = params.get('recoveryCode') || '';\r\n    });\r\n  }\r\n\r\n  async onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const { password } = this.formData;\r\n    this.loading = true;\r\n\r\n    const result = await this.authService.changePassword(password, this.recoveryCode);\r\n    this.loading = false;\r\n\r\n    if (result.isOk) {\r\n      this.router.navigate(['/login-form']);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }\r\n\r\n  confirmPassword = (e: ValidationCallbackData) => {\r\n    return e.value === this.formData.password;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form (submit)=\"onSubmit($event)\">\r\n  <dx-form [formData]=\"formData\" [disabled]=\"loading\">\r\n\r\n    <dxi-form-item dataField=\"password\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Password is required\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item dataField=\"confirmedPassword\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Password is required\"></dxi-form-validation-rule>\r\n      <dxi-form-validation-rule type=\"custom\" message=\"Passwords do not match\" [validationCallback]=\"confirmPassword\">\r\n      </dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item itemType=\"button\">\r\n      <dxo-form-button-options width=\"100%\" type=\"default\" [useSubmitBehavior]=\"true\" [template]=\"'changePasswordTemplate'\">\r\n      </dxo-form-button-options>\r\n    </dxi-form-item>\r\n\r\n    <ng-container *dxTemplate=\"let item of 'changePasswordTemplate'\">\r\n      <div>\r\n        <span class=\"dx-button-text\">\r\n          <ng-container *ngIf=\"loading; else notLoading\">\r\n            <dx-load-indicator width=\"24px\" height=\"24px\" [visible]=\"true\"></dx-load-indicator>\r\n          </ng-container>\r\n          <ng-template #notLoading>Continue</ng-template>\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </dx-form>\r\n</form>\r\n"
        },
        {
            "name": "CreateAccountFormComponent",
            "id": "component-CreateAccountFormComponent-969212cb55ecfb5dc9fba08755a6258be1ae6ad5ee9e55558cce88b960b3b3f1993aa432443dd3c8c3ed3d0b7518fc38910a76a628efb98fb703a3a9f95e3b18",
            "file": "src/app/shared/components/create-account-form/create-account-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-account-form",
            "styleUrls": [
                "./create-account-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-account-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "confirmPassword",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "formData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "DxFormModule",
                    "type": "module"
                },
                {
                    "name": "DxLoadIndicatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ValidationCallbackData } from 'devextreme-angular/common';\r\nimport { DxFormModule } from 'devextreme-angular/ui/form';\r\nimport { DxLoadIndicatorModule } from 'devextreme-angular/ui/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { AuthService } from '../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-account-form',\r\n  templateUrl: './create-account-form.component.html',\r\n  styleUrls: ['./create-account-form.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    DxFormModule,\r\n    DxLoadIndicatorModule,\r\n  ]\r\n})\r\nexport class CreateAccountFormComponent {\r\n  loading = false;\r\n  formData: any = {};\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  async onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const { email, password } = this.formData;\r\n    this.loading = true;\r\n\r\n    const result = await this.authService.createAccount(email, password);\r\n    this.loading = false;\r\n\r\n    if (result.isOk) {\r\n      this.router.navigate(['/login-form']);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }\r\n\r\n  confirmPassword = (e: ValidationCallbackData) => {\r\n    return e.value === this.formData.password;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".create-account-form {\r\n  .policy-info {\r\n    color: var(--base-text-color-alpha-7);\r\n    font-size: 12px;\r\n    font-style: normal;\r\n\r\n    a {\r\n      color: var(--base-text-color-alpha-7);\r\n    }\r\n  }\r\n\r\n  .login-link {\r\n    color: var(--base-accent);\r\n    font-size: 12px;\r\n    text-align: center;\r\n    padding: 6px 0 32px 0;\r\n    border-bottom: 1px solid var(--border-color);\r\n  }\r\n}\r\n",
                    "styleUrl": "./create-account-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form class=\"create-account-form\" (submit)=\"onSubmit($event)\">\r\n  <dx-form [formData]=\"formData\" [disabled]=\"loading\">\r\n\r\n    <dxi-form-item dataField=\"email\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Email is required\"></dxi-form-validation-rule>\r\n      <dxi-form-validation-rule type=\"email\" message=\"Email is invalid\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item dataField=\"password\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Password is required\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item dataField=\"confirmedPassword\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Password is required\"></dxi-form-validation-rule>\r\n      <dxi-form-validation-rule type=\"custom\" message=\"Passwords do not match\" [validationCallback]=\"confirmPassword\">\r\n      </dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item>\r\n      <div class='policy-info'>\r\n        By creating an account, you agree to the <a routerLink=\"#\">Terms of Service</a> and <a routerLink=\"#\">Privacy\r\n          Policy</a>\r\n      </div>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item itemType=\"button\">\r\n      <dxo-form-button-options width=\"100%\" type=\"default\" [useSubmitBehavior]=\"true\" [template]=\"'createAccountTemplate'\">\r\n      </dxo-form-button-options>\r\n    </dxi-form-item>\r\n\r\n    <ng-container *dxTemplate=\"let item of 'createAccountTemplate'\">\r\n      <div>\r\n        <span class=\"dx-button-text\">\r\n          <ng-container *ngIf=\"loading; else notLoading\">\r\n            <dx-load-indicator width=\"24px\" height=\"24px\" [visible]=\"true\"></dx-load-indicator>\r\n          </ng-container>\r\n\r\n          <ng-template #notLoading>Create a new account</ng-template>\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </dx-form>\r\n  <div class=\"login-link\">\r\n    Have an account? <a routerLink=\"/login\">Sign In</a>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d1f66e46622c6437327f7e2f004487e8b7b03f76552e0aef4a89ae7492dbd6accc46e66509aed7eae89922d4cdc6110a6d46d45bc7c09adfc71b10fbb77de98b",
            "file": "src/app/shared/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "template": "<footer><ng-content></ng-content></footer>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  template: `\r\n    <footer><ng-content></ng-content></footer>\r\n  `,\r\n  styleUrls: ['./footer.component.scss'],\r\n  standalone: true\r\n})\r\n\r\nexport class FooterComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  color: var(--base-text-color-alpha-7);\r\n  border-top: 1px solid var(--footer-border-color);\r\n  padding-top: 20px;\r\n  padding-bottom: 24px;\r\n  margin: 0 40px;\r\n\r\n  .screen-x-small & {\r\n    margin: 0 20px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-8304689c03b4449b69ccf843fc00c202f3ef36117b99aeb2a7516c43363901aade00b6d81c77cc4bfdd5296eae53daee97d4354e9ad47c55f8df1a5c6d0e812e-1",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "menuToggleEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuToggle",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "toggleMenu",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "user",
                    "defaultValue": "{ email: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "[{\r\n    text: 'Profile',\r\n    icon: 'user',\r\n    onClick: () => {\r\n      this.router.navigate(['/profile']);\r\n    }\r\n  },\r\n  {\r\n    text: 'Logout',\r\n    icon: 'runner',\r\n    onClick: () => {\r\n      this.authService.logOut();\r\n    }\r\n  }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DxButtonModule",
                    "type": "module"
                },
                {
                    "name": "UserPanelComponent",
                    "type": "component"
                },
                {
                    "name": "DxToolbarModule",
                    "type": "module"
                },
                {
                    "name": "ThemeSwitcherComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxButtonModule } from 'devextreme-angular/ui/button';\r\nimport { DxToolbarModule } from 'devextreme-angular/ui/toolbar';\r\n\r\nimport { AuthService, IUser } from '../../services';\r\nimport { UserPanelComponent } from '../user-panel/user-panel.component';\r\nimport { ThemeSwitcherComponent } from '../theme-switcher/theme-switcher.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: 'header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    DxButtonModule,\r\n    UserPanelComponent,\r\n    DxToolbarModule,\r\n    ThemeSwitcherComponent,\r\n  ]\r\n})\r\n\r\nexport class HeaderComponent implements OnInit {\r\n  @Output()\r\n  menuToggle = new EventEmitter<boolean>();\r\n\r\n  @Input()\r\n  menuToggleEnabled = false;\r\n\r\n  @Input()\r\n  title!: string;\r\n\r\n  user: IUser | null = { email: '' };\r\n\r\n  userMenuItems = [{\r\n    text: 'Profile',\r\n    icon: 'user',\r\n    onClick: () => {\r\n      this.router.navigate(['/profile']);\r\n    }\r\n  },\r\n  {\r\n    text: 'Logout',\r\n    icon: 'runner',\r\n    onClick: () => {\r\n      this.authService.logOut();\r\n    }\r\n  }];\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getUser().then((e) => this.user = e.data);\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.menuToggle.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  flex: 0 0 auto;\r\n  z-index: 1;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n}\r\n\r\n::ng-deep header {\r\n  background-color: var(--base-bg);\r\n}\r\n\r\n::ng-deep .dx-toolbar.header-toolbar .dx-toolbar-items-container .dx-toolbar-after {\r\n  padding: 0 40px;\r\n\r\n  :host-context(.screen-x-small) & {\r\n    padding: 0 20px;\r\n  }\r\n}\r\n\r\n::ng-deep .dx-toolbar .dx-toolbar-item.menu-button {\r\n  width: var(--side-panel-min-width);\r\n  text-align: center;\r\n  padding: 0;\r\n}\r\n\r\n::ng-deep .header-title .dx-item-content {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n:host-context(.dx-theme-generic) {\r\n  .header-toolbar {\r\n    padding: 10px 0;\r\n  }\r\n\r\n  .user-button>.dx-button-content {\r\n    padding: 3px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header>\r\n  <dx-toolbar class=\"header-toolbar\">\r\n    <dxi-toolbar-item\r\n      *ngIf=\"menuToggleEnabled\"\r\n      location=\"before\"\r\n      widget=\"dxButton\"\r\n      cssClass=\"menu-button\"\r\n      [options]=\"{\r\n        icon: 'menu',\r\n        stylingMode: 'text',\r\n        onClick: toggleMenu\r\n      }\">\r\n    </dxi-toolbar-item>\r\n    <dxi-toolbar-item\r\n      location=\"before\"\r\n      cssClass=\"header-title\"\r\n      *ngIf=\"title\"\r\n      [text]=\"title\">\r\n    </dxi-toolbar-item>\r\n    <dxi-toolbar-item\r\n      location=\"after\"\r\n    >\r\n      <ng-container *dxTemplate>\r\n        <theme-switcher></theme-switcher>\r\n      </ng-container>\r\n    </dxi-toolbar-item>\r\n    <dxi-toolbar-item\r\n      location=\"after\"\r\n      locateInMenu=\"auto\"\r\n      menuItemTemplate=\"menuItem\">\r\n      <div *dxTemplate=\"let data of 'item'\">\r\n        <app-user-panel [menuItems]=\"userMenuItems\"></app-user-panel>\r\n      </div>\r\n    </dxi-toolbar-item>\r\n    <div *dxTemplate=\"let data of 'menuItem'\">\r\n      <app-user-panel [menuItems]=\"userMenuItems\" menuMode=\"list\"></app-user-panel>\r\n    </div>\r\n  </dx-toolbar>\r\n</header>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-34c41df2e039f1853a3387980b9f69c9a50dfaa864bdf3fdcaad688c03445983734d23cba9b258db5bf491eaddb907b8ccd673b4a45d50132a86eb8748f61354",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'home.component.html',\r\n  styleUrls: [ './home.component.scss' ],\r\n  standalone: false\r\n})\r\n\r\nexport class HomeComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logos-container {\r\n  margin: 0 0 40px 0;\r\n\r\n  svg {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n.devextreme-logo {\r\n  width: 255px;\r\n  height: 60px;\r\n\r\n  > path {\r\n    fill: var(--devextreme-logo-color);\r\n  }\r\n\r\n  .by-devexpress {\r\n    path {\r\n      fill: var(--devextreme-logo-color);\r\n    }\r\n  }\r\n}\r\n\r\n.angular-logo {\r\n  width: 247px;\r\n  height: 60px;\r\n}\r\n\r\n.plus {\r\n  margin: 20px;\r\n  width: 22px;\r\n  height: 22px;\r\n\r\n  path {\r\n    fill:  var(--plus-icon-color);\r\n  }\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "templateData": "<h2>Home</h2>\r\n<div class=\"content-block\">\r\n  <div class=\"dx-card responsive-paddings\">\r\n    <div class=\"logos-container\">\r\n      <svg class=\"devextreme-logo\" width=\"255\" height=\"60\" viewBox=\"0 0 255 60\" fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clip-path=\"url(#clip0_93_1163)\">\r\n          <mask id=\"mask0_93_1163\" style=\"mask-type:luminance\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"60\"\r\n            height=\"60\">\r\n            <path d=\"M60 0H0V60H60V0Z\" fill=\"white\" />\r\n          </mask>\r\n          <g mask=\"url(#mask0_93_1163)\">\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n              d=\"M4.68 60.0006H55.305C57.9 60.0006 59.985 57.9012 59.985 55.3218V15.7017C30.93 20.7705 13.38 36.4564 4.155 48.0036C2.535 49.8481 1.38 51.6927 0.69 53.0724C0.465 53.5222 0.015 54.6619 0 55.3518C0.03 57.9162 2.115 59.9856 4.68 59.9856V60.0006Z\"\r\n              fill=\"#596C7D\" />\r\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n              d=\"M4.68 0C2.1 0 0 2.09947 0 4.67883V35.2861C10.62 24.219 29.4 12.9418 57.69 8.98275C58.74 8.8328 59.49 8.72783 60 8.63784V4.67883C60 2.08448 57.9 0 55.32 0H4.68Z\"\r\n              fill=\"#2190F7\" />\r\n            <path\r\n              d=\"M49.2449 40.235C50.3699 41.1947 51.3299 42.2894 52.0799 43.4891L52.0949 43.4591C52.6649 44.5089 52.9349 45.6636 52.8899 46.8183C52.9499 48.4229 52.3349 50.0126 51.1649 51.2571C50.5949 51.8271 49.9199 52.262 49.1549 52.5618C48.4349 52.8318 47.6549 52.9818 46.8899 52.9818H46.6199C45.2849 52.9818 43.9649 52.5768 42.8999 51.8421L42.7349 51.7372V47.898L43.3349 48.3329C44.1899 48.9777 45.2399 49.3377 46.3649 49.4127C46.7099 49.4127 47.0699 49.3677 47.3849 49.2477C47.6999 49.1277 47.9849 48.9477 48.2099 48.7229C48.6899 48.198 48.9299 47.5232 48.8849 46.8333C48.8999 46.1285 48.7199 45.4386 48.3449 44.8388C48.1199 44.4939 47.8499 44.1639 47.5649 43.8491C47.2049 43.4591 46.7549 43.0242 46.2299 42.5594C45.2699 41.7045 44.6099 41.0897 44.1149 40.5798C43.6499 40.13 39.4199 35.6012 43.6199 31.4022C44.1749 30.8474 44.8649 30.4274 45.6149 30.1425C46.3649 29.8575 47.2049 29.7375 47.9999 29.7675H48.0449C49.2449 29.7675 50.4599 30.0375 51.5399 30.5324L51.7499 30.6374V34.5063L51.1649 34.0865C50.4149 33.5616 49.5149 33.2468 48.5549 33.2018C48.1949 33.2018 47.8499 33.2616 47.5199 33.3816C47.1899 33.5016 46.9049 33.6966 46.6799 33.9215C46.1699 34.4165 45.0599 36.186 47.4449 38.5704C47.8799 39.0053 48.4649 39.5451 49.2449 40.235Z\"\r\n              fill=\"white\" />\r\n            <path\r\n              d=\"M34.035 30.0981H38.115V47.2688C38.115 51.3927 36.045 52.3226 35.265 52.6374C34.635 52.8924 33.945 53.0273 33.24 53.0273C33.165 53.0273 33.0937 53.0235 33.0225 53.0198C32.9512 53.016 32.88 53.0123 32.805 53.0123H32.64C31.68 53.0123 30.72 52.8024 29.85 52.4124L29.625 52.3076V48.4535L30.195 48.7983C30.795 49.1733 31.5 49.3983 32.235 49.4732C33.885 49.4732 34.035 47.9286 34.035 47.1038V30.0981Z\"\r\n              fill=\"white\" />\r\n          </g>\r\n        </g>\r\n        <path\r\n          d=\"M89.71 19.6538C89.71 24.2495 88.7705 27.7661 86.8916 30.2036C85.0254 32.6284 82.334 33.8408 78.8174 33.8408H72V6H79.4458C82.6831 6 85.2031 7.19971 87.0059 9.59912C88.8086 11.9858 89.71 15.3374 89.71 19.6538ZM84.397 19.8062C84.397 13.5854 82.6831 10.4751 79.2554 10.4751H77.1797V29.3086H78.8555C80.7471 29.3086 82.1436 28.5215 83.0449 26.9473C83.9463 25.3604 84.397 22.98 84.397 19.8062Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M101.307 34.2217C98.6538 34.2217 96.5591 33.2822 95.0229 31.4033C93.4995 29.5117 92.7378 26.8394 92.7378 23.3862C92.7378 19.8823 93.4297 17.1465 94.8135 15.1787C96.1973 13.2109 98.127 12.2271 100.603 12.2271C102.913 12.2271 104.735 13.0713 106.068 14.7598C107.401 16.4355 108.067 18.7905 108.067 21.8247V24.5288H97.8794C97.9175 26.4204 98.3047 27.8296 99.041 28.7563C99.7773 29.6704 100.793 30.1274 102.088 30.1274C103.738 30.1274 105.427 29.6133 107.153 28.585V32.7554C105.528 33.7329 103.58 34.2217 101.307 34.2217ZM100.564 16.1309C99.8408 16.1309 99.2441 16.5181 98.7744 17.2925C98.3047 18.0542 98.0317 19.2412 97.9556 20.8535H103.097C103.072 19.3047 102.837 18.1304 102.393 17.3306C101.948 16.5308 101.339 16.1309 100.564 16.1309Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M114.809 33.8408L109.267 12.627H114.523L117.227 24.9097C117.341 25.481 117.475 26.3188 117.627 27.4233C117.792 28.5151 117.894 29.3022 117.932 29.7847H118.008C118.021 29.4038 118.071 28.8579 118.16 28.147C118.262 27.436 118.363 26.7822 118.465 26.1855C118.566 25.5889 119.544 21.0693 121.397 12.627H126.653L121.093 33.8408H114.809Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M141.678 33.8408H129.129V6H141.678V10.4751H134.309V17.1021H141.145V21.5962H134.309V29.3086H141.678V33.8408Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M149.086 23.0054L143.792 12.627H149.048L151.866 19.1016L154.475 12.627H159.693L154.361 23.0054L159.921 33.8408H154.627L151.619 27.0615L148.819 33.8408H143.544L149.086 23.0054Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M169.748 29.937C170.458 29.937 171.227 29.7593 172.052 29.4038V33.3647C171.227 33.936 169.989 34.2217 168.338 34.2217C166.498 34.2217 165.133 33.6758 164.244 32.584C163.355 31.4795 162.911 29.8291 162.911 27.6328V16.645H160.854V14.3789L163.501 12.5508L164.796 8.05664H168.034V12.627H171.88V16.645H168.034V27.8042C168.034 29.2261 168.605 29.937 169.748 29.937Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M184.068 12.2271C184.69 12.2271 185.299 12.3223 185.896 12.5127L185.306 17.4258C184.95 17.2988 184.487 17.2354 183.916 17.2354C182.684 17.2354 181.738 17.7241 181.078 18.7017C180.418 19.6665 180.088 21.0757 180.088 22.9292V33.8408H175.022V12.627H179.193L179.764 15.9404H179.936C180.494 14.6074 181.104 13.6553 181.764 13.084C182.424 12.5127 183.192 12.2271 184.068 12.2271Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M195.989 34.2217C193.335 34.2217 191.241 33.2822 189.705 31.4033C188.181 29.5117 187.419 26.8394 187.419 23.3862C187.419 19.8823 188.111 17.1465 189.495 15.1787C190.879 13.2109 192.809 12.2271 195.284 12.2271C197.595 12.2271 199.417 13.0713 200.75 14.7598C202.083 16.4355 202.749 18.7905 202.749 21.8247V24.5288H192.561C192.599 26.4204 192.986 27.8296 193.723 28.7563C194.459 29.6704 195.475 30.1274 196.77 30.1274C198.42 30.1274 200.108 29.6133 201.835 28.585V32.7554C200.21 33.7329 198.261 34.2217 195.989 34.2217ZM195.246 16.1309C194.522 16.1309 193.926 16.5181 193.456 17.2925C192.986 18.0542 192.713 19.2412 192.637 20.8535H197.779C197.753 19.3047 197.519 18.1304 197.074 17.3306C196.63 16.5308 196.021 16.1309 195.246 16.1309Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M227.162 33.8408V21.1963C227.162 18.0859 226.394 16.5308 224.858 16.5308C223.741 16.5308 222.941 17.0894 222.458 18.2065C221.976 19.311 221.735 21.0884 221.735 23.5386V33.8408H216.631V21.1963C216.631 18.0859 215.851 16.5308 214.289 16.5308C213.197 16.5308 212.404 17.083 211.909 18.1875C211.414 19.292 211.166 21.1138 211.166 23.6528V33.8408H206.101V12.627H210.119L210.728 15.3501H211.052C211.56 14.271 212.251 13.4839 213.127 12.9888C214.016 12.481 214.962 12.2271 215.965 12.2271C218.555 12.2271 220.281 13.4521 221.145 15.9023H221.335C222.414 13.4521 224.147 12.2271 226.534 12.2271C228.413 12.2271 229.834 12.8872 230.799 14.2075C231.777 15.5278 232.266 17.4575 232.266 19.9966V33.8408H227.162Z\"\r\n          fill=\"#596C7D\" />\r\n        <path\r\n          d=\"M244.206 34.2217C241.552 34.2217 239.458 33.2822 237.921 31.4033C236.398 29.5117 235.636 26.8394 235.636 23.3862C235.636 19.8823 236.328 17.1465 237.712 15.1787C239.096 13.2109 241.025 12.2271 243.501 12.2271C245.812 12.2271 247.633 13.0713 248.966 14.7598C250.299 16.4355 250.966 18.7905 250.966 21.8247V24.5288H240.778C240.816 26.4204 241.203 27.8296 241.939 28.7563C242.676 29.6704 243.691 30.1274 244.986 30.1274C246.637 30.1274 248.325 29.6133 250.052 28.585V32.7554C248.427 33.7329 246.478 34.2217 244.206 34.2217ZM243.463 16.1309C242.739 16.1309 242.143 16.5181 241.673 17.2925C241.203 18.0542 240.93 19.2412 240.854 20.8535H245.996C245.97 19.3047 245.735 18.1304 245.291 17.3306C244.847 16.5308 244.237 16.1309 243.463 16.1309Z\"\r\n          fill=\"#596C7D\" />\r\n        <g class=\"by-devexpress\" opacity=\"0.5\">\r\n          <path\r\n            d=\"M76.7893 44.2302C77.7542 44.2302 78.5127 44.7095 79.0649 45.668C79.6172 46.6265 79.8933 47.9753 79.8933 49.7146C79.8933 51.4729 79.614 52.8313 79.0554 53.7898C78.5032 54.7483 77.7351 55.2275 76.7512 55.2275C76.2751 55.2275 75.853 55.126 75.4849 54.9229C75.123 54.7134 74.7803 54.3484 74.4565 53.8279H74.2947L73.8662 55.0371H72V40.2217H74.5327V43.6875C74.5327 43.8335 74.5295 43.9858 74.5232 44.1445C74.5168 44.3032 74.4756 44.8586 74.3994 45.8108H74.5327C74.8438 45.2268 75.1802 44.8174 75.542 44.5825C75.9038 44.3477 76.3196 44.2302 76.7893 44.2302ZM75.9133 46.3821C75.4309 46.3821 75.0818 46.6074 74.866 47.0581C74.6565 47.5088 74.5454 48.3022 74.5327 49.4385V49.6956C74.5327 50.927 74.6406 51.7935 74.8564 52.2949C75.0786 52.7964 75.4373 53.0471 75.9324 53.0471C76.8464 53.0471 77.3035 51.9236 77.3035 49.6765C77.3035 47.4802 76.8401 46.3821 75.9133 46.3821Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M80.5979 44.4302H83.2258L84.6921 50.4192C84.8381 50.9524 84.9556 51.6982 85.0444 52.6567H85.1016C85.1079 52.5044 85.1365 52.2346 85.1873 51.8474C85.238 51.4539 85.2793 51.146 85.311 50.9238C85.3428 50.7017 85.7808 48.5371 86.625 44.4302H89.291L86.2537 55.7988C85.8855 57.1953 85.3967 58.1982 84.7874 58.8076C84.178 59.417 83.3655 59.7217 82.3499 59.7217C81.8484 59.7217 81.4009 59.6677 81.0073 59.5598V57.4365C81.2676 57.5127 81.5596 57.5508 81.8833 57.5508C82.7339 57.5508 83.2925 56.9922 83.5591 55.875L83.74 55.2085L80.5979 44.4302Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M104.202 47.9436C104.202 50.2415 103.732 51.9998 102.792 53.2185C101.859 54.4309 100.514 55.0371 98.7554 55.0371H95.3467V41.1167H99.0696C100.688 41.1167 101.948 41.7166 102.85 42.9163C103.751 44.1096 104.202 45.7854 104.202 47.9436ZM101.545 48.0198C101.545 44.9094 100.688 43.3542 98.9744 43.3542H97.9365V52.771H98.7744C99.7202 52.771 100.418 52.3774 100.869 51.5903C101.32 50.7969 101.545 49.6067 101.545 48.0198Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M110 55.2275C108.674 55.2275 107.626 54.7578 106.858 53.8184C106.096 52.8726 105.716 51.5364 105.716 49.8098C105.716 48.0579 106.062 46.6899 106.753 45.7061C107.445 44.7222 108.41 44.2302 109.648 44.2302C110.803 44.2302 111.714 44.6523 112.381 45.4966C113.047 46.3345 113.38 47.512 113.38 49.0291V50.3811H108.286C108.305 51.3269 108.499 52.0315 108.867 52.4949C109.235 52.9519 109.743 53.1804 110.391 53.1804C111.216 53.1804 112.06 52.9233 112.923 52.4092V54.4944C112.111 54.9832 111.136 55.2275 110 55.2275ZM109.629 46.1821C109.267 46.1821 108.969 46.3757 108.734 46.7629C108.499 47.1438 108.363 47.7373 108.324 48.5435H110.895C110.883 47.769 110.765 47.1819 110.543 46.782C110.321 46.3821 110.016 46.1821 109.629 46.1821Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M116.751 55.0371L113.98 44.4302H116.608L117.96 50.5715C118.017 50.8572 118.084 51.2761 118.16 51.8284C118.243 52.3743 118.293 52.7678 118.312 53.009H118.351C118.357 52.8186 118.382 52.5457 118.427 52.1902C118.478 51.8347 118.528 51.5078 118.579 51.2095C118.63 50.9111 119.119 48.6514 120.045 44.4302H122.673L119.893 55.0371H116.751Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M130.186 55.0371H123.911V41.1167H130.186V43.3542H126.501V46.6677H129.919V48.9148H126.501V52.771H130.186V55.0371Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M133.89 49.6194L131.243 44.4302H133.871L135.28 47.6675L136.584 44.4302H139.193L136.527 49.6194L139.307 55.0371H136.66L135.156 51.6475L133.756 55.0371H131.119L133.89 49.6194Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M145.268 55.2275C144.811 55.2275 144.405 55.126 144.049 54.9229C143.7 54.7134 143.373 54.3484 143.068 53.8279H142.935C143.037 54.6912 143.087 55.2117 143.087 55.3894V59.7217H140.536V44.4302H142.497L142.935 45.8108H143.049C143.576 44.7571 144.341 44.2302 145.344 44.2302C146.309 44.2302 147.064 44.7095 147.61 45.668C148.156 46.6201 148.429 47.969 148.429 49.7146C148.429 51.4348 148.146 52.7837 147.582 53.7612C147.017 54.7388 146.245 55.2275 145.268 55.2275ZM144.487 46.3821C143.992 46.3821 143.633 46.6138 143.411 47.0771C143.195 47.5342 143.081 48.2959 143.068 49.3623V49.6956C143.068 50.8635 143.179 51.7141 143.402 52.2473C143.624 52.7805 143.992 53.0471 144.506 53.0471C145.395 53.0471 145.839 51.9236 145.839 49.6765C145.839 48.572 145.728 47.7468 145.506 47.2009C145.29 46.655 144.95 46.3821 144.487 46.3821Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M154.732 44.2302C155.043 44.2302 155.348 44.2778 155.646 44.373L155.351 46.8296C155.173 46.7661 154.942 46.7344 154.656 46.7344C154.04 46.7344 153.567 46.9788 153.237 47.4675C152.907 47.95 152.742 48.6545 152.742 49.5813V55.0371H150.209V44.4302H152.295L152.58 46.0869H152.666C152.945 45.4204 153.25 44.9443 153.58 44.6587C153.91 44.373 154.294 44.2302 154.732 44.2302Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M160.693 55.2275C159.366 55.2275 158.319 54.7578 157.551 53.8184C156.789 52.8726 156.408 51.5364 156.408 49.8098C156.408 48.0579 156.754 46.6899 157.446 45.7061C158.138 44.7222 159.103 44.2302 160.34 44.2302C161.496 44.2302 162.406 44.6523 163.073 45.4966C163.74 46.3345 164.073 47.512 164.073 49.0291V50.3811H158.979C158.998 51.3269 159.191 52.0315 159.56 52.4949C159.928 52.9519 160.436 53.1804 161.083 53.1804C161.908 53.1804 162.752 52.9233 163.616 52.4092V54.4944C162.803 54.9832 161.829 55.2275 160.693 55.2275ZM160.321 46.1821C159.959 46.1821 159.661 46.3757 159.426 46.7629C159.191 47.1438 159.055 47.7373 159.017 48.5435H161.588C161.575 47.769 161.458 47.1819 161.235 46.782C161.013 46.3821 160.708 46.1821 160.321 46.1821Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M171.442 51.9331C171.442 52.9678 171.138 53.7771 170.528 54.3611C169.925 54.9387 169.033 55.2275 167.853 55.2275C166.805 55.2275 165.939 55.0212 165.253 54.6086V52.4092C165.603 52.6504 166.009 52.8503 166.472 53.009C166.942 53.1677 167.354 53.2471 167.71 53.2471C168.104 53.2471 168.402 53.1519 168.605 52.9614C168.814 52.7646 168.919 52.5076 168.919 52.1902C168.919 51.8665 168.811 51.584 168.595 51.3428C168.38 51.1016 167.983 50.8064 167.405 50.4573C166.637 50.0002 166.085 49.5146 165.749 49.0005C165.418 48.48 165.253 47.8674 165.253 47.1628C165.253 46.2615 165.561 45.5474 166.177 45.0205C166.799 44.4937 167.65 44.2302 168.729 44.2302C169.668 44.2302 170.554 44.4778 171.385 44.9729L170.557 46.7915C169.878 46.4233 169.281 46.2393 168.767 46.2393C168.443 46.2393 168.199 46.325 168.034 46.4963C167.875 46.6677 167.796 46.8772 167.796 47.1248C167.796 47.4104 167.894 47.6643 168.091 47.8865C168.294 48.1086 168.668 48.3848 169.214 48.7148C169.875 49.1147 170.338 49.4543 170.604 49.7336C170.871 50.0129 171.077 50.3303 171.223 50.6858C171.369 51.0413 171.442 51.457 171.442 51.9331Z\"\r\n            fill=\"#596C7D\" />\r\n          <path\r\n            d=\"M178.736 51.9331C178.736 52.9678 178.431 53.7771 177.822 54.3611C177.219 54.9387 176.327 55.2275 175.146 55.2275C174.099 55.2275 173.232 55.0212 172.547 54.6086V52.4092C172.896 52.6504 173.302 52.8503 173.766 53.009C174.235 53.1677 174.648 53.2471 175.003 53.2471C175.397 53.2471 175.695 53.1519 175.898 52.9614C176.108 52.7646 176.213 52.5076 176.213 52.1902C176.213 51.8665 176.105 51.584 175.889 51.3428C175.673 51.1016 175.276 50.8064 174.699 50.4573C173.931 50.0002 173.378 49.5146 173.042 49.0005C172.712 48.48 172.547 47.8674 172.547 47.1628C172.547 46.2615 172.855 45.5474 173.47 45.0205C174.093 44.4937 174.943 44.2302 176.022 44.2302C176.962 44.2302 177.847 44.4778 178.679 44.9729L177.85 46.7915C177.171 46.4233 176.574 46.2393 176.06 46.2393C175.737 46.2393 175.492 46.325 175.327 46.4963C175.168 46.6677 175.089 46.8772 175.089 47.1248C175.089 47.4104 175.188 47.6643 175.384 47.8865C175.587 48.1086 175.962 48.3848 176.508 48.7148C177.168 49.1147 177.631 49.4543 177.898 49.7336C178.165 50.0129 178.371 50.3303 178.517 50.6858C178.663 51.0413 178.736 51.457 178.736 51.9331Z\"\r\n            fill=\"#596C7D\" />\r\n        </g>\r\n        <defs>\r\n          <clipPath id=\"clip0_93_1163\">\r\n            <rect width=\"60\" height=\"60\" fill=\"white\" />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n\r\n      <svg class=\"plus\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g opacity=\"0.6\" clip-path=\"url(#clip0_93_1176)\">\r\n          <path\r\n            d=\"M21.6309 13.3433H13.1714V21.8027H8.73291V13.3433H0.229492V8.88281H8.73291V0.379395H13.1714V8.88281H21.6309V13.3433Z\"\r\n            fill=\"#242424\" />\r\n        </g>\r\n        <defs>\r\n          <clipPath id=\"clip0_93_1176\">\r\n            <rect width=\"22\" height=\"22\" fill=\"white\" />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n      <svg width=\"247\" height=\"60\" viewBox=\"0 0 247 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clip-path=\"url(#clip0_93_1179)\">\r\n          <mask id=\"mask0_93_1179\" style=\"mask-type:luminance\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"247\"\r\n            height=\"60\">\r\n            <path d=\"M0 0H247V60H0V0Z\" fill=\"white\" />\r\n          </mask>\r\n          <g mask=\"url(#mask0_93_1179)\">\r\n            <path\r\n              d=\"M97.7627 48.1067H105.522L91.3825 7.99029H82.3883L68.2487 48.1067H76.0078L79.3215 38.2265H94.4285L97.7627 48.1067ZM81.2975 32.3724L86.7309 16.2274H87.0396L92.4733 32.3724H81.2975ZM113.199 30.4828V48.1067H106.098V18.0349H112.89V23.1497H113.24C113.94 21.4652 115.051 20.1301 116.574 19.144C118.097 18.1582 119.991 17.6654 122.234 17.6654C124.313 17.6654 126.124 18.1172 127.688 19.0004C129.232 19.8836 130.446 21.1777 131.29 22.862C132.155 24.5465 132.566 26.58 132.546 28.9833V48.1067H125.445V30.0515C125.445 28.0383 124.93 26.4773 123.881 25.327C122.831 24.1973 121.411 23.6222 119.579 23.6222C118.344 23.6222 117.233 23.889 116.266 24.4436C115.298 24.9778 114.557 25.7583 114.002 26.7854C113.487 27.7918 113.199 29.0242 113.199 30.4828ZM148.208 60C145.656 60 143.475 59.6508 141.643 58.973C139.811 58.2951 138.35 57.3708 137.238 56.2205C136.127 55.0702 135.345 53.7967 134.933 52.3998L141.334 50.8594C141.622 51.4549 142.034 52.03 142.589 52.6052C143.145 53.1803 143.886 53.6734 144.812 54.0638C145.739 54.4539 146.932 54.6389 148.352 54.6389C150.369 54.6389 152.036 54.1459 153.354 53.1803C154.671 52.2151 155.33 50.6129 155.33 48.3944V42.7044H154.98C154.609 43.444 154.074 44.1836 153.374 44.9641C152.674 45.7446 151.748 46.3813 150.616 46.8949C149.464 47.4085 148.044 47.6754 146.315 47.6754C144.01 47.6754 141.91 47.1208 140.017 46.0323C138.144 44.9435 136.641 43.3002 135.55 41.1434C134.439 38.9661 133.883 36.2548 133.883 32.9681C133.883 29.6817 134.439 26.8674 135.55 24.5874C136.662 22.3074 138.144 20.582 140.037 19.3908C141.931 18.1993 144.03 17.6242 146.335 17.6242C148.105 17.6242 149.567 17.9116 150.699 18.5074C151.851 19.1031 152.757 19.8218 153.436 20.6438C154.115 21.4652 154.63 22.2459 154.98 22.9853H155.371V18.0146H162.368V48.5792C162.368 51.1469 161.751 53.283 160.516 54.9675C159.281 56.6518 157.614 57.9048 155.473 58.747C153.333 59.5893 150.904 60 148.208 60ZM148.27 42.109C149.773 42.109 151.049 41.7392 152.119 41.0202C153.168 40.2808 153.992 39.2332 154.527 37.8773C155.083 36.5011 155.35 34.858 155.35 32.9475C155.35 31.0373 155.083 29.394 154.527 27.9768C153.992 26.5594 153.189 25.4503 152.139 24.6492C151.09 23.8685 149.793 23.4577 148.27 23.4577C146.747 23.4577 145.368 23.8685 144.298 24.6904C143.248 25.5118 142.445 26.6415 141.91 28.0589C141.375 29.4967 141.108 31.1194 141.108 32.9272C141.108 34.7347 141.375 36.3781 141.931 37.7543C142.466 39.1305 143.269 40.1985 144.339 40.9587C145.389 41.7186 146.706 42.109 148.27 42.109ZM183.876 35.4537V18.0349H190.977V48.1067H184.082V42.7662H183.773C183.094 44.4505 181.983 45.8267 180.418 46.8949C178.875 47.9631 176.961 48.4971 174.697 48.4971C172.721 48.4971 170.972 48.0658 169.469 47.1823C167.967 46.2992 166.773 45.0256 165.929 43.3208C165.085 41.6365 164.653 39.5824 164.653 37.1792V18.0349H171.774V36.0904C171.774 38.0006 172.289 39.5207 173.338 40.63C174.388 41.7598 175.767 42.3143 177.455 42.3143C178.504 42.3143 179.513 42.0678 180.501 41.5541C181.489 41.0408 182.291 40.2808 182.929 39.2741C183.568 38.2471 183.876 36.9736 183.876 35.4537ZM200.403 7.99054V48.1067H193.303V7.99029H200.403V7.99054ZM211.682 48.7024C209.768 48.7024 208.06 48.3532 206.537 47.6754C205.014 46.9976 203.799 45.9705 202.935 44.6355C202.05 43.3002 201.617 41.6365 201.617 39.6645C201.617 37.9597 201.926 36.5628 202.564 35.4537C203.202 34.3444 204.046 33.4612 205.137 32.7833C206.228 32.1259 207.442 31.6125 208.821 31.2633C210.179 30.9141 211.6 30.6675 213.061 30.5033C214.831 30.3183 216.251 30.1541 217.363 30.0103C218.453 29.8664 219.256 29.6199 219.771 29.3119C220.264 28.9833 220.532 28.4902 220.532 27.8124V27.6891C220.532 26.2102 220.1 25.0805 219.215 24.2588C218.33 23.4577 217.074 23.0468 215.428 23.0468C213.678 23.0468 212.32 23.4166 211.291 24.1765C210.282 24.9367 209.603 25.8198 209.233 26.8674L202.605 25.9225C203.12 24.0944 203.985 22.5746 205.199 21.3213C206.392 20.089 207.874 19.1649 209.603 18.5485C211.353 17.9322 213.267 17.6242 215.366 17.6242C216.827 17.6242 218.268 17.7884 219.709 18.1376C221.15 18.4868 222.467 19.0413 223.661 19.8221C224.854 20.6026 225.801 21.6502 226.542 22.9853C227.262 24.3203 227.633 25.9843 227.633 27.9768V48.1067H220.8V43.978H220.573C220.141 44.8203 219.544 45.6008 218.762 46.3198C217.98 47.0387 217.013 47.6345 215.84 48.0658C214.625 48.4971 213.267 48.7024 211.682 48.7024ZM213.534 43.5055C214.954 43.5055 216.189 43.2181 217.239 42.6635C218.289 42.0884 219.091 41.3488 219.668 40.4039C220.244 39.4592 220.511 38.4321 220.511 37.3228V33.7692C220.285 33.9542 219.915 34.1184 219.38 34.2828C218.844 34.447 218.268 34.5703 217.609 34.6936C216.951 34.8168 216.313 34.9195 215.675 35.0016C215.037 35.0839 214.481 35.166 214.008 35.2278C212.958 35.3714 211.991 35.5973 211.167 35.9259C210.324 36.2548 209.665 36.7067 209.192 37.2818C208.698 37.857 208.471 38.6169 208.471 39.5207C208.471 40.8354 208.945 41.8213 209.912 42.4785C210.838 43.1769 212.053 43.5055 213.534 43.5055ZM229.794 48.1067V18.0349H236.689V23.047H236.997C237.553 21.301 238.5 19.9657 239.837 19.0208C241.175 18.0761 242.719 17.6036 244.448 17.6036C244.839 17.6036 245.292 17.6242 245.765 17.6445C246.259 17.6857 246.671 17.7269 247 17.7884V24.3C246.691 24.1971 246.218 24.0944 245.58 24.0123C244.959 23.9318 244.333 23.8907 243.707 23.8893C242.41 23.8893 241.258 24.1767 240.229 24.7313C239.2 25.2859 238.397 26.0458 237.8 27.0319C237.203 28.0177 236.915 29.1474 236.915 30.421V48.1067H229.794ZM55.8585 9.839L53.8415 41.4515L34.5566 0L55.8585 9.839ZM42.5011 50.7156L27.9294 59.0141L13.3574 50.7156L16.3211 43.5467H39.5374L42.5011 50.7156ZM27.9294 15.7343L35.565 34.2623H20.2935L27.9294 15.7343ZM1.99637 41.4515L0 9.839L21.3019 0L1.99637 41.4515Z\"\r\n              fill=\"url(#paint0_linear_93_1179)\" />\r\n            <path\r\n              d=\"M97.7627 48.1067H105.522L91.3825 7.99029H82.3883L68.2487 48.1067H76.0078L79.3215 38.2265H94.4285L97.7627 48.1067ZM81.2975 32.3724L86.7309 16.2274H87.0396L92.4733 32.3724H81.2975ZM113.199 30.4828V48.1067H106.098V18.0349H112.89V23.1497H113.24C113.94 21.4652 115.051 20.1301 116.574 19.144C118.097 18.1582 119.991 17.6654 122.234 17.6654C124.313 17.6654 126.124 18.1172 127.688 19.0004C129.232 19.8836 130.446 21.1777 131.29 22.862C132.155 24.5465 132.566 26.58 132.546 28.9833V48.1067H125.445V30.0515C125.445 28.0383 124.93 26.4773 123.881 25.327C122.831 24.1973 121.411 23.6222 119.579 23.6222C118.344 23.6222 117.233 23.889 116.266 24.4436C115.298 24.9778 114.557 25.7583 114.002 26.7854C113.487 27.7918 113.199 29.0242 113.199 30.4828ZM148.208 60C145.656 60 143.475 59.6508 141.643 58.973C139.811 58.2951 138.35 57.3708 137.238 56.2205C136.127 55.0702 135.345 53.7967 134.933 52.3998L141.334 50.8594C141.622 51.4549 142.034 52.03 142.589 52.6052C143.145 53.1803 143.886 53.6734 144.812 54.0638C145.739 54.4539 146.932 54.6389 148.352 54.6389C150.369 54.6389 152.036 54.1459 153.354 53.1803C154.671 52.2151 155.33 50.6129 155.33 48.3944V42.7044H154.98C154.609 43.444 154.074 44.1836 153.374 44.9641C152.674 45.7446 151.748 46.3813 150.616 46.8949C149.464 47.4085 148.044 47.6754 146.315 47.6754C144.01 47.6754 141.91 47.1208 140.017 46.0323C138.144 44.9435 136.641 43.3002 135.55 41.1434C134.439 38.9661 133.883 36.2548 133.883 32.9681C133.883 29.6817 134.439 26.8674 135.55 24.5874C136.662 22.3074 138.144 20.582 140.037 19.3908C141.931 18.1993 144.03 17.6242 146.335 17.6242C148.105 17.6242 149.567 17.9116 150.699 18.5074C151.851 19.1031 152.757 19.8218 153.436 20.6438C154.115 21.4652 154.63 22.2459 154.98 22.9853H155.371V18.0146H162.368V48.5792C162.368 51.1469 161.751 53.283 160.516 54.9675C159.281 56.6518 157.614 57.9048 155.473 58.747C153.333 59.5893 150.904 60 148.208 60ZM148.27 42.109C149.773 42.109 151.049 41.7392 152.119 41.0202C153.168 40.2808 153.992 39.2332 154.527 37.8773C155.083 36.5011 155.35 34.858 155.35 32.9475C155.35 31.0373 155.083 29.394 154.527 27.9768C153.992 26.5594 153.189 25.4503 152.139 24.6492C151.09 23.8685 149.793 23.4577 148.27 23.4577C146.747 23.4577 145.368 23.8685 144.298 24.6904C143.248 25.5118 142.445 26.6415 141.91 28.0589C141.375 29.4967 141.108 31.1194 141.108 32.9272C141.108 34.7347 141.375 36.3781 141.931 37.7543C142.466 39.1305 143.269 40.1985 144.339 40.9587C145.389 41.7186 146.706 42.109 148.27 42.109ZM183.876 35.4537V18.0349H190.977V48.1067H184.082V42.7662H183.773C183.094 44.4505 181.983 45.8267 180.418 46.8949C178.875 47.9631 176.961 48.4971 174.697 48.4971C172.721 48.4971 170.972 48.0658 169.469 47.1823C167.967 46.2992 166.773 45.0256 165.929 43.3208C165.085 41.6365 164.653 39.5824 164.653 37.1792V18.0349H171.774V36.0904C171.774 38.0006 172.289 39.5207 173.338 40.63C174.388 41.7598 175.767 42.3143 177.455 42.3143C178.504 42.3143 179.513 42.0678 180.501 41.5541C181.489 41.0408 182.291 40.2808 182.929 39.2741C183.568 38.2471 183.876 36.9736 183.876 35.4537ZM200.403 7.99054V48.1067H193.303V7.99029H200.403V7.99054ZM211.682 48.7024C209.768 48.7024 208.06 48.3532 206.537 47.6754C205.014 46.9976 203.799 45.9705 202.935 44.6355C202.05 43.3002 201.617 41.6365 201.617 39.6645C201.617 37.9597 201.926 36.5628 202.564 35.4537C203.202 34.3444 204.046 33.4612 205.137 32.7833C206.228 32.1259 207.442 31.6125 208.821 31.2633C210.179 30.9141 211.6 30.6675 213.061 30.5033C214.831 30.3183 216.251 30.1541 217.363 30.0103C218.453 29.8664 219.256 29.6199 219.771 29.3119C220.264 28.9833 220.532 28.4902 220.532 27.8124V27.6891C220.532 26.2102 220.1 25.0805 219.215 24.2588C218.33 23.4577 217.074 23.0468 215.428 23.0468C213.678 23.0468 212.32 23.4166 211.291 24.1765C210.282 24.9367 209.603 25.8198 209.233 26.8674L202.605 25.9225C203.12 24.0944 203.985 22.5746 205.199 21.3213C206.392 20.089 207.874 19.1649 209.603 18.5485C211.353 17.9322 213.267 17.6242 215.366 17.6242C216.827 17.6242 218.268 17.7884 219.709 18.1376C221.15 18.4868 222.467 19.0413 223.661 19.8221C224.854 20.6026 225.801 21.6502 226.542 22.9853C227.262 24.3203 227.633 25.9843 227.633 27.9768V48.1067H220.8V43.978H220.573C220.141 44.8203 219.544 45.6008 218.762 46.3198C217.98 47.0387 217.013 47.6345 215.84 48.0658C214.625 48.4971 213.267 48.7024 211.682 48.7024ZM213.534 43.5055C214.954 43.5055 216.189 43.2181 217.239 42.6635C218.289 42.0884 219.091 41.3488 219.668 40.4039C220.244 39.4592 220.511 38.4321 220.511 37.3228V33.7692C220.285 33.9542 219.915 34.1184 219.38 34.2828C218.844 34.447 218.268 34.5703 217.609 34.6936C216.951 34.8168 216.313 34.9195 215.675 35.0016C215.037 35.0839 214.481 35.166 214.008 35.2278C212.958 35.3714 211.991 35.5973 211.167 35.9259C210.324 36.2548 209.665 36.7067 209.192 37.2818C208.698 37.857 208.471 38.6169 208.471 39.5207C208.471 40.8354 208.945 41.8213 209.912 42.4785C210.838 43.1769 212.053 43.5055 213.534 43.5055ZM229.794 48.1067V18.0349H236.689V23.047H236.997C237.553 21.301 238.5 19.9657 239.837 19.0208C241.175 18.0761 242.719 17.6036 244.448 17.6036C244.839 17.6036 245.292 17.6242 245.765 17.6445C246.259 17.6857 246.671 17.7269 247 17.7884V24.3C246.691 24.1971 246.218 24.0944 245.58 24.0123C244.959 23.9318 244.333 23.8907 243.707 23.8893C242.41 23.8893 241.258 24.1767 240.229 24.7313C239.2 25.2859 238.397 26.0458 237.8 27.0319C237.203 28.0177 236.915 29.1474 236.915 30.421V48.1067H229.794ZM55.8585 9.839L53.8415 41.4515L34.5566 0L55.8585 9.839ZM42.5011 50.7156L27.9294 59.0141L13.3574 50.7156L16.3211 43.5467H39.5374L42.5011 50.7156ZM27.9294 15.7343L35.565 34.2623H20.2935L27.9294 15.7343ZM1.99637 41.4515L0 9.839L21.3019 0L1.99637 41.4515Z\"\r\n              fill=\"url(#paint1_radial_93_1179)\" />\r\n          </g>\r\n        </g>\r\n        <defs>\r\n          <linearGradient id=\"paint0_linear_93_1179\" x1=\"0\" y1=\"48.2008\" x2=\"247\" y2=\"48.2008\"\r\n            gradientUnits=\"userSpaceOnUse\">\r\n            <stop stop-color=\"#F0070C\" />\r\n            <stop offset=\"0.526\" stop-color=\"#CC26D5\" />\r\n            <stop offset=\"1\" stop-color=\"#7702FF\" />\r\n          </linearGradient>\r\n          <radialGradient id=\"paint1_radial_93_1179\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\"\r\n            gradientTransform=\"translate(76.8416 -15.4394) rotate(118.168) scale(51.6858 51.7408)\">\r\n            <stop stop-color=\"#FF41F8\" />\r\n            <stop offset=\"0.707\" stop-color=\"#FF41F8\" stop-opacity=\"0.5\" />\r\n            <stop offset=\"1\" stop-color=\"#FF41F8\" stop-opacity=\"0\" />\r\n          </radialGradient>\r\n          <clipPath id=\"clip0_93_1179\">\r\n            <rect width=\"247\" height=\"60\" fill=\"white\" />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n\r\n    </div>\r\n\r\n    <p>Thanks for using the DevExtreme Angular App Template.</p>\r\n    <p>This application was built using <a href=\"https://cli.angular.io/\" target=\"_blank\"\r\n        rel=\"noopener noreferrer\">Angular CLI</a>\r\n      and <a href=\"https://js.devexpress.com/Documentation/Guide/Common/DevExtreme_CLI/\" target=\"_blank\"\r\n        rel=\"noopener noreferrer\">DevExtreme CLI</a>\r\n      and includes the following DevExtreme components:</p>\r\n    <ul>\r\n      <li><a href=\"https://js.devexpress.com/Documentation/Guide/UI_Components/DataGrid/Getting_Started_with_DataGrid/\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">DataGrid</a></li>\r\n      <li><a href=\"https://js.devexpress.com/Documentation/Guide/Widgets/Form/Overview/\" target=\"_blank\"\r\n          rel=\"noopener noreferrer\">Form</a></li>\r\n      <li><a href=\"https://js.devexpress.com/Documentation/Guide/Widgets/Drawer/Getting_Started_with_Navigation_Drawer/\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">Drawer</a></li>\r\n    </ul>\r\n\r\n    <p>To customize your DevExtreme Angular application further, please refer to the following help topics:</p>\r\n\r\n    <ul>\r\n      <li><a href=\"https://js.devexpress.com/Documentation/Guide/Angular_Components/Application_Template/#Layouts\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">Layouts</a></li>\r\n      <li><a\r\n          href=\"https://js.devexpress.com/Documentation/Guide/Angular_Components/Application_Template/#Add_a_New_View\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">Add a New View</a></li>\r\n      <li><a\r\n          href=\"https://js.devexpress.com/Documentation/Guide/Angular_Components/Application_Template/#Configure_the_Navigation_Menu\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">Configure the Navigation Menu</a></li>\r\n      <li><a\r\n          href=\"https://js.devexpress.com/Documentation/Guide/Angular_Components/Application_Template/#Configure_Themes\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\">Configure Themes</a></li>\r\n    </ul>\r\n\r\n    <p>For technical content related to DevExtreme Angular components, feel free to explore\r\n      our <a href=\"https://js.devexpress.com/documentation/\" target=\"_blank\" rel=\"noopener noreferrer\">online\r\n        documentation</a>\r\n      and <a href=\"https://js.devexpress.com/Demos/Widgetsgallery/\" target=\"_blank\" rel=\"noopener noreferrer\">technical\r\n        demos</a>.\r\n    </p>\r\n  </div>\r\n</div>"
        },
        {
            "name": "LoginFormComponent",
            "id": "component-LoginFormComponent-59156462963ca2a9155b0ce2522a7dbcf30730237485f58ae31a5250dc437657623e73e92c96afbc4692871695321d586e1632f66cc99a4247f06fa9ae437b49",
            "file": "src/app/shared/components/login-form/login-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-form",
            "styleUrls": [
                "./login-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onCreateAccountClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "DxFormModule",
                    "type": "module"
                },
                {
                    "name": "DxButtonModule",
                    "type": "module"
                },
                {
                    "name": "DxLoadIndicatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { DxFormModule } from 'devextreme-angular/ui/form';\r\nimport { DxButtonModule } from 'devextreme-angular/ui/button';\r\nimport { DxLoadIndicatorModule } from 'devextreme-angular/ui/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { AuthService } from '../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    DxFormModule,\r\n    DxButtonModule,\r\n    DxLoadIndicatorModule,\r\n  ]\r\n})\r\nexport class LoginFormComponent {\r\n  loading = false;\r\n  formData: any = {};\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  async onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const { email, password } = this.formData;\r\n    this.loading = true;\r\n\r\n    const result = await this.authService.logIn(email, password);\r\n    if (!result.isOk) {\r\n      this.loading = false;\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }\r\n\r\n  onCreateAccountClick = () => {\r\n    this.router.navigate(['/create-account']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".login-form {\r\n  .link {\r\n    text-align: center;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    margin: 6px 0 50px;\r\n  }\r\n\r\n  ::ng-deep .form-text {\r\n    color: var(--base-text-color-alpha-7);\r\n  }\r\n}\r\n",
                    "styleUrl": "./login-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form class=\"login-form\" (submit)=\"onSubmit($event)\">\r\n  <dx-form [formData]=\"formData\" [disabled]=\"loading\">\r\n\r\n    <dxi-form-item dataField=\"email\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Email is required\"></dxi-form-validation-rule>\r\n      <dxi-form-validation-rule type=\"email\" message=\"Email is invalid\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item dataField=\"password\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Password is required\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item dataField=\"rememberMe\" editorType=\"dxCheckBox\"\r\n      [editorOptions]=\"{ text: 'Remember me', elementAttr: { class: 'form-text' } }\">\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item itemType=\"button\">\r\n      <dxo-form-button-options width=\"100%\" type=\"default\" [useSubmitBehavior]=\"true\" [template]=\"'signInTemplate'\">\r\n      </dxo-form-button-options>\r\n    </dxi-form-item>\r\n\r\n    <ng-container *dxTemplate=\"let item of 'signInTemplate'\">\r\n      <div>\r\n        <span class=\"dx-button-text\">\r\n          <ng-container *ngIf=\"loading; else notLoading\">\r\n            <dx-load-indicator width=\"24px\" height=\"24px\" [visible]=\"true\"></dx-load-indicator>\r\n          </ng-container>\r\n          <ng-template #notLoading>Sign In</ng-template>\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </dx-form>\r\n  <div class=\"link\">\r\n    <a routerLink=\"/reset-password\">Forgot password?</a>\r\n  </div>\r\n  <dx-button stylingMode=\"outlined\" text=\"Create an account\" width=\"100%\"  (click)=\"onCreateAccountClick()\"></dx-button>\r\n</form>\r\n"
        },
        {
            "name": "NotAuthorizedContainerComponent",
            "id": "component-NotAuthorizedContainerComponent-968b2a0596ac4ba08e0daaf4a0534ca53d98276e1946a70c066e9f5e073751df8fb68e78c63fd83f75858ab9ad6691b7e952a7ad11f8e55a760e39ae018327b9",
            "file": "src/app/not-authorized-container.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-authorized-container",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      width: 100%;\n      height: 100%;\n    }\n  "
            ],
            "template": "<app-single-card [title]=\"title\" [description]=\"description\">\n  <router-outlet></router-outlet>\n</app-single-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "SingleCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SingleCardComponent } from './layouts';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-authorized-container',\r\n  template: `\r\n    <app-single-card [title]=\"title\" [description]=\"description\">\r\n      <router-outlet></router-outlet>\r\n    </app-single-card>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SingleCardComponent,\r\n  ]\r\n})\r\nexport class NotAuthorizedContainerComponent {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  get title() {\r\n    const path = this.router.url.split('/')[1];\r\n    switch (path) {\r\n      case 'login-form': return 'Sign In';\r\n      case 'reset-password': return 'Reset Password';\r\n      case 'create-account': return 'Sign Up';\r\n      case 'change-password': return 'Change Password';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n  get description() {\r\n    const path = this.router.url.split('/')[1];\r\n    switch (path) {\r\n      case 'reset-password': return 'Please enter the email address that you used to register, and we will send you a link to reset your password via Email.';\r\n      default: return '';\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      width: 100%;\n      height: 100%;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "description": {
                    "name": "description",
                    "getSignature": {
                        "name": "description",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            }
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-17bc707899c39ae6be08545bafb3a689882fcab7f0ae720cf9c4417131f258b90121f5e2e6075787f59df7a0d7b0704c8ffb9acd8819521421517188553fdfba",
            "file": "src/app/pages/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colCountByScreen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "employee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DxFormModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { DxFormModule } from 'devextreme-angular/ui/form';\r\n\r\n@Component({\r\n  templateUrl: 'profile.component.html',\r\n  styleUrls: [ './profile.component.scss' ],\r\n  standalone: true,\r\n  imports: [DxFormModule],\r\n})\r\n\r\nexport class ProfileComponent {\r\n  employee: any;\r\n  colCountByScreen: object;\r\n\r\n  constructor()   {\r\n    console.log('profile constr');\r\n    this.employee = {\r\n      ID: 7,\r\n      FirstName: 'Sandra',\r\n      LastName: 'Johnson',\r\n      Prefix: 'Mrs.',\r\n      Position: 'Controller',\r\n      Picture: 'images/employees/06.png',\r\n      BirthDate: new Date('1974/11/5'),\r\n      HireDate: new Date('2005/05/11'),\r\n      /* tslint:disable-next-line:max-line-length */\r\n      Notes: 'Sandra is a CPA and has been our controller since 2008. She loves to interact with staff so if you`ve not met her, be certain to say hi.\\r\\n\\r\\nSandra has 2 daughters both of whom are accomplished gymnasts.',\r\n      Address: '4600 N Virginia Rd.'\r\n    };\r\n    this.colCountByScreen = {\r\n      xs: 1,\r\n      sm: 2,\r\n      md: 3,\r\n      lg: 4\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-avatar {\r\n  float: left;\r\n  height: 120px;\r\n  width: 120px;\r\n  margin-right: 20px;\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n\r\n  img {\r\n    height: 120px;\r\n    display: block;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<h2>Profile</h2>\r\n\r\n<div class=\"content-block dx-card responsive-paddings\">\r\n  <div class=\"form-avatar\">\r\n    <img src=\"https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/{{employee.Picture}}\"/>\r\n  </div>\r\n  <span>{{employee.Notes}}</span>\r\n</div>\r\n\r\n<div class=\"content-block dx-card responsive-paddings\">\r\n  <dx-form id=\"form\"\r\n    [formData]=\"employee\"\r\n    labelLocation=\"top\"\r\n    [colCountByScreen]=\"colCountByScreen\"\r\n  >\r\n  </dx-form>\r\n</div>\r\n"
        },
        {
            "name": "ResetPasswordFormComponent",
            "id": "component-ResetPasswordFormComponent-7d572db4061e412ba9e18954289de0d53df64333aa690d0a6adf3c67a73d7c757e937d6f090736c0e306ff966ae73dd082efcacb67a9bd9779a5ec84246c98bd",
            "file": "src/app/shared/components/reset-password-form/reset-password-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reset-password-form",
            "styleUrls": [
                "./reset-password-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reset-password-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "DxFormModule",
                    "type": "module"
                },
                {
                    "name": "DxLoadIndicatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { DxFormModule } from 'devextreme-angular/ui/form';\r\nimport { DxLoadIndicatorModule } from 'devextreme-angular/ui/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { AuthService } from '../../services';\r\n\r\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-form',\r\n  templateUrl: './reset-password-form.component.html',\r\n  styleUrls: ['./reset-password-form.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    DxFormModule,\r\n    DxLoadIndicatorModule,\r\n  ]\r\n})\r\nexport class ResetPasswordFormComponent {\r\n  loading = false;\r\n  formData: any = {};\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  async onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const { email } = this.formData;\r\n    this.loading = true;\r\n\r\n    const result = await this.authService.resetPassword(email);\r\n    this.loading = false;\r\n\r\n    if (result.isOk) {\r\n      this.router.navigate(['/login-form']);\r\n      notify(notificationText, 'success', 2500);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reset-password-form {\r\n  ::ng-deep .submit-button {\r\n    margin-top: 18px;\r\n  }\r\n\r\n  .login-link {\r\n    color: var(--base-accent);\r\n    font-size: 12px;\r\n    text-align: center;\r\n    margin-top: 6px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./reset-password-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form class=\"reset-password-form\" (submit)=\"onSubmit($event)\">\r\n  <dx-form [formData]=\"formData\" [disabled]=\"loading\">\r\n\r\n    <dxi-form-item dataField=\"email\" editorType=\"dxTextBox\"\r\n      [editorOptions]=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\">\r\n      <dxi-form-validation-rule type=\"required\" message=\"Email is required\"></dxi-form-validation-rule>\r\n      <dxi-form-validation-rule type=\"email\" message=\"Email is invalid\"></dxi-form-validation-rule>\r\n      <dxo-form-label [visible]=\"false\"></dxo-form-label>\r\n    </dxi-form-item>\r\n\r\n    <dxi-form-item itemType=\"button\">\r\n      <dxo-form-button-options width=\"100%\" type=\"default\" [useSubmitBehavior]=\"true\" [template]=\"'resetPasswordTemplate'\"\r\n        [elementAttr]=\"{ class: 'submit-button' }\">\r\n      </dxo-form-button-options>\r\n    </dxi-form-item>\r\n\r\n    <ng-container *dxTemplate=\"let item of 'resetPasswordTemplate'\">\r\n      <div>\r\n        <span class=\"dx-button-text\">\r\n          <ng-container *ngIf=\"loading; else notLoading\">\r\n            <dx-load-indicator width=\"24px\" height=\"24px\" [visible]=\"true\"></dx-load-indicator>\r\n          </ng-container>\r\n          <ng-template #notLoading>Reset my password</ng-template>\r\n        </span>\r\n      </div>>\r\n    </ng-container>\r\n\r\n  </dx-form>\r\n  <div class=\"login-link\">\r\n    Return to <a routerLink=\"/login\">Sign In</a>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SideNavigationMenuComponent",
            "id": "component-SideNavigationMenuComponent-8ca6aa68f8008a589b9e61dcb1596adc0d121d33389875fc013565e1588da9465369f075cdf2a70af3dd5293e812f97abaec3e8e0ee3f8dba682fe43c63e092f",
            "file": "src/app/shared/components/side-navigation-menu/side-navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-navigation-menu",
            "styleUrls": [
                "./side-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "compactMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "String",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "openMenu",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedItemChanged",
                    "defaultValue": "new EventEmitter<DxTreeViewTypes.ItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_compactMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, >[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxTreeViewComponent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DxTreeViewComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onItemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DxTreeViewModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Output, Input, EventEmitter, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { DxTreeViewModule, DxTreeViewComponent, DxTreeViewTypes } from 'devextreme-angular/ui/tree-view';\r\nimport { navigation } from '../../../app-navigation';\r\n\r\nimport * as events from 'devextreme-angular/common/core/events';\r\n\r\n@Component({\r\n  selector: 'app-side-navigation-menu',\r\n  templateUrl: './side-navigation-menu.component.html',\r\n  styleUrls: ['./side-navigation-menu.component.scss'],\r\n  standalone: true,\r\n  imports: [ DxTreeViewModule ]\r\n})\r\nexport class SideNavigationMenuComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild(DxTreeViewComponent, { static: true })\r\n  menu!: DxTreeViewComponent;\r\n\r\n  @Output()\r\n  selectedItemChanged = new EventEmitter<DxTreeViewTypes.ItemClickEvent>();\r\n\r\n  @Output()\r\n  openMenu = new EventEmitter<any>();\r\n\r\n  private _selectedItem!: String;\r\n  @Input()\r\n  set selectedItem(value: String) {\r\n    this._selectedItem = value;\r\n    if (!this.menu.instance) {\r\n      return;\r\n    }\r\n\r\n    this.menu.instance.selectItem(value);\r\n  }\r\n\r\n  private _items!: Record <string, unknown>[];\r\n  get items() {\r\n    if (!this._items) {\r\n      this._items = navigation.map((item) => {\r\n        if(item.path && !(/^\\//.test(item.path))){\r\n          item.path = `/${item.path}`;\r\n        }\r\n         return { ...item, expanded: !this._compactMode }\r\n        });\r\n    }\r\n\r\n    return this._items;\r\n  }\r\n\r\n  private _compactMode = false;\r\n  @Input()\r\n  get compactMode() {\r\n    return this._compactMode;\r\n  }\r\n  set compactMode(val) {\r\n    this._compactMode = val;\r\n\r\n    if (!this.menu.instance) {\r\n      return;\r\n    }\r\n\r\n    if (val) {\r\n      this.menu.instance.collapseAll();\r\n    } else {\r\n      this.menu.instance.expandItem(this._selectedItem);\r\n    }\r\n  }\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  onItemClick(event: DxTreeViewTypes.ItemClickEvent) {\r\n    this.selectedItemChanged.emit(event);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    events.on(this.elementRef.nativeElement, 'dxclick', (e: Event) => {\r\n      this.openMenu.next(e);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    events.off(this.elementRef.nativeElement, 'dxclick');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host.dx-swatch-additional,\r\n:host.dx-swatch-additional-dark {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  height: 100%;\r\n  width: 250px !important;\r\n  background-color: var(--base-bg);\r\n\r\n  ::ng-deep .menu-container {\r\n    min-height: 100%;\r\n    display: flex;\r\n    flex: 1;\r\n\r\n    .dx-treeview {\r\n      // ## Long text positioning\r\n      white-space: nowrap;\r\n      // ##\r\n\r\n      // ## Icon width customization\r\n      .dx-treeview-item {\r\n        padding-left: 0;\r\n        border-radius: 0;\r\n        flex-direction: row-reverse;\r\n\r\n        .dx-icon {\r\n          width: var(--side-panel-min-width) !important;\r\n          margin: 0 !important;\r\n        }\r\n      }\r\n\r\n      // ##\r\n\r\n      // ## Arrow customization\r\n      .dx-treeview-node {\r\n        padding: 0 0 !important;\r\n      }\r\n\r\n      .dx-treeview-toggle-item-visibility {\r\n        right: 10px;\r\n        left: auto;\r\n      }\r\n\r\n      .dx-rtl .dx-treeview-toggle-item-visibility {\r\n        left: 10px;\r\n        right: auto;\r\n      }\r\n      // ##\r\n\r\n      // ## Item levels customization\r\n      .dx-treeview-node {\r\n        &[aria-level=\"1\"] {\r\n          font-weight: bold;\r\n        }\r\n\r\n        &[aria-level=\"2\"] .dx-treeview-item-content {\r\n          font-weight: normal;\r\n          padding: 0 var(--side-panel-min-width);\r\n        }\r\n      }\r\n      // ##\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./side-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "selectedItem": {
                    "name": "selectedItem",
                    "setSignature": {
                        "name": "selectedItem",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "String",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "String",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "items": {
                    "name": "items",
                    "getSignature": {
                        "name": "items",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                },
                "compactMode": {
                    "name": "compactMode",
                    "setSignature": {
                        "name": "compactMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 54,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "compactMode",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\r\n\r\n<div class=\"menu-container\">\r\n  <dx-tree-view\r\n    [items]=\"items\"\r\n    keyExpr=\"path\"\r\n    selectionMode=\"single\"\r\n    [focusStateEnabled]=\"false\"\r\n    expandEvent=\"click\"\r\n    (onItemClick)=\"onItemClick($event)\"\r\n    width=\"100%\">\r\n  </dx-tree-view>\r\n</div>\r\n"
        },
        {
            "name": "SideNavInnerToolbarComponent",
            "id": "component-SideNavInnerToolbarComponent-0d0e3dfad79a3aeef151d60a914023bc0d8446710642e65d422a2e3549141e5ef1ef3d2e116b29a70ac2ba2821e0dfb8ba5841e17cc39e2dd18b3fd18170e681",
            "file": "src/app/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-nav-inner-toolbar",
            "styleUrls": [
                "./side-nav-inner-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-nav-inner-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuMode",
                    "defaultValue": "'shrink'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxDrawerTypes.OpenedStateMode",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "menuOpened",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "menuRevealMode",
                    "defaultValue": "'expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxDrawerTypes.RevealMode",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "minMenuSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "scrollView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxScrollViewComponent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DxScrollViewComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                },
                {
                    "name": "selectedRoute",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "shaderEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "swatchClassName",
                    "defaultValue": "'dx-swatch-additional'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "temporaryMenuOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "toggleMenu",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                }
            ],
            "methodsClass": [
                {
                    "name": "navigationChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigationClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDrawer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SideNavigationMenuComponent",
                    "type": "component"
                },
                {
                    "name": "DxDrawerModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DxToolbarModule",
                    "type": "module"
                },
                {
                    "name": "DxScrollViewModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DxTreeViewTypes } from 'devextreme-angular/ui/tree-view';\r\nimport { DxDrawerModule, DxDrawerTypes } from 'devextreme-angular/ui/drawer';\r\nimport { DxScrollViewModule, DxScrollViewComponent } from 'devextreme-angular/ui/scroll-view';\r\nimport { DxToolbarModule, DxToolbarTypes } from 'devextreme-angular/ui/toolbar';\r\n\r\nimport { SideNavigationMenuComponent, HeaderComponent } from '../../shared/components';\r\nimport { ScreenService } from '../../shared/services';\r\nimport { ThemeService } from '../../shared/services/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-side-nav-inner-toolbar',\r\n  templateUrl: './side-nav-inner-toolbar.component.html',\r\n  styleUrls: ['./side-nav-inner-toolbar.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    SideNavigationMenuComponent,\r\n    DxDrawerModule,\r\n    HeaderComponent,\r\n    DxToolbarModule,\r\n    DxScrollViewModule,\r\n    CommonModule,\r\n  ]\r\n})\r\nexport class SideNavInnerToolbarComponent implements OnInit {\r\n  @ViewChild(DxScrollViewComponent, { static: true }) scrollView!: DxScrollViewComponent;\r\n  selectedRoute = '';\r\n\r\n  menuOpened!: boolean;\r\n  temporaryMenuOpened = false;\r\n\r\n  @Input()\r\n  title!: string;\r\n\r\n  menuMode: DxDrawerTypes.OpenedStateMode = 'shrink';\r\n  menuRevealMode: DxDrawerTypes.RevealMode = 'expand';\r\n  minMenuSize = 0;\r\n  shaderEnabled = false;\r\n  swatchClassName = 'dx-swatch-additional';\r\n\r\n  constructor(protected themeService: ThemeService, private screen: ScreenService, private router: Router) {\r\n    themeService.isDark.subscribe((isDark) => {\r\n      this.swatchClassName = 'dx-swatch-additional' + (isDark ? '-dark' : '');\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.menuOpened = this.screen.sizes['screen-large'];\r\n\r\n    this.router.events.subscribe(val => {\r\n      if (val instanceof NavigationEnd) {\r\n        this.selectedRoute = val.urlAfterRedirects.split('?')[0];\r\n      }\r\n    });\r\n\r\n    this.screen.changed.subscribe(() => this.updateDrawer());\r\n\r\n    this.updateDrawer();\r\n  }\r\n\r\n  updateDrawer() {\r\n    const isXSmall = this.screen.sizes['screen-x-small'];\r\n    const isLarge = this.screen.sizes['screen-large'];\r\n\r\n    this.menuMode = isLarge ? 'shrink' : 'overlap';\r\n    this.menuRevealMode = isXSmall ? 'slide' : 'expand';\r\n    this.minMenuSize = isXSmall ? 0 : 60;\r\n    this.shaderEnabled = !isLarge;\r\n  }\r\n\r\n  toggleMenu = (e: DxToolbarTypes.ItemClickEvent) => {\r\n    this.menuOpened = !this.menuOpened;\r\n    e.event?.stopPropagation();\r\n  }\r\n\r\n  get hideMenuAfterNavigation() {\r\n    return this.menuMode === 'overlap' || this.temporaryMenuOpened;\r\n  }\r\n\r\n  get showMenuAfterClick() {\r\n    return !this.menuOpened;\r\n  }\r\n\r\n  navigationChanged(event: DxTreeViewTypes.ItemClickEvent) {\r\n    const path = (event.itemData as any).path;\r\n    const pointerEvent = event.event;\r\n\r\n    if (path && this.menuOpened) {\r\n      if (event.node?.selected) {\r\n        pointerEvent?.preventDefault();\r\n      } else {\r\n        this.router.navigate([path]);\r\n        this.scrollView.instance.scrollTo(0);\r\n      }\r\n\r\n      if (this.hideMenuAfterNavigation) {\r\n        this.temporaryMenuOpened = false;\r\n        this.menuOpened = false;\r\n        pointerEvent?.stopPropagation();\r\n      }\r\n    } else {\r\n      pointerEvent?.preventDefault();\r\n    }\r\n  }\r\n\r\n  navigationClick() {\r\n    if (this.showMenuAfterClick) {\r\n      this.temporaryMenuOpened = true;\r\n      this.menuOpened = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  width: 100%;\r\n}\r\n\r\n#navigation-header {\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n  :host-context(.screen-x-small) & {\r\n    padding-left: 20px;\r\n  }\r\n\r\n  :host-context(.dx-theme-generic) & {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./side-nav-inner-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "hideMenuAfterNavigation": {
                    "name": "hideMenuAfterNavigation",
                    "getSignature": {
                        "name": "hideMenuAfterNavigation",
                        "type": "",
                        "returnType": "",
                        "line": 79
                    }
                },
                "showMenuAfterClick": {
                    "name": "showMenuAfterClick",
                    "getSignature": {
                        "name": "showMenuAfterClick",
                        "type": "",
                        "returnType": "",
                        "line": 83
                    }
                }
            },
            "templateData": "<dx-drawer\r\n  class=\"drawer\"\r\n  position=\"before\"\r\n  [closeOnOutsideClick]=\"shaderEnabled\"\r\n  [openedStateMode]=\"menuMode\"\r\n  [revealMode]=\"menuRevealMode\"\r\n  [minSize]=\"minMenuSize\"\r\n  [shading]=\"shaderEnabled\"\r\n  [(opened)]=\"menuOpened\">\r\n\r\n  <app-side-navigation-menu\r\n    [compactMode]=\"!menuOpened\"\r\n    [selectedItem]=\"selectedRoute\"\r\n    [ngClass]=\"swatchClassName\"\r\n    *dxTemplate=\"let dataMenu of 'panel'\"\r\n    (selectedItemChanged)=\"navigationChanged($event)\"\r\n    (openMenu)=\"navigationClick()\">\r\n      <dx-toolbar id=\"navigation-header\">\r\n        <dxi-toolbar-item\r\n          *ngIf=\"minMenuSize !== 0\"\r\n          location=\"before\"\r\n          cssClass=\"menu-button\"\r\n          widget=\"dxButton\"\r\n          [options]=\"{\r\n            icon: 'menu',\r\n            stylingMode: 'text',\r\n            onClick: toggleMenu\r\n          }\">\r\n        </dxi-toolbar-item>\r\n        <dxi-toolbar-item\r\n          location=\"before\"\r\n          cssClass=\"header-title\"\r\n          [text]=\"title\">\r\n        </dxi-toolbar-item>\r\n      </dx-toolbar>\r\n  </app-side-navigation-menu>\r\n\r\n  <div class=\"container\">\r\n    <app-header\r\n      [menuToggleEnabled]=\"minMenuSize === 0\"\r\n      (menuToggle)=\"menuOpened = !menuOpened;\">\r\n    </app-header>\r\n\r\n    <dx-scroll-view class=\"layout-body with-footer\">\r\n      <div class=\"content\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n\r\n      <div class=\"content-block\">\r\n        <ng-content select=\"app-footer\"></ng-content>\r\n      </div>\r\n    </dx-scroll-view>\r\n  </div>\r\n</dx-drawer>\r\n"
        },
        {
            "name": "SideNavOuterToolbarComponent",
            "id": "component-SideNavOuterToolbarComponent-66af5176d89af5df91835a8332b0c561e8f2ff93b306e7f36db323d5bcae4176e9e3e7a641bd88031e6d07a32f735da1dadb5ad4e0381aa21e678abbf6033553",
            "file": "src/app/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-nav-outer-toolbar",
            "styleUrls": [
                "./side-nav-outer-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-nav-outer-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuMode",
                    "defaultValue": "'shrink'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxDrawerTypes.OpenedStateMode",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "menuOpened",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "menuRevealMode",
                    "defaultValue": "'expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxDrawerTypes.RevealMode",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "minMenuSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "scrollView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxScrollViewComponent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DxScrollViewComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                },
                {
                    "name": "selectedRoute",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "shaderEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "swatchClassName",
                    "defaultValue": "'dx-swatch-additional'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "temporaryMenuOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "navigationChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DxTreeViewTypes.ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigationClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDrawer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SideNavigationMenuComponent",
                    "type": "component"
                },
                {
                    "name": "DxDrawerModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DxScrollViewModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n\r\nimport { DxTreeViewTypes } from 'devextreme-angular/ui/tree-view';\r\nimport { DxDrawerModule, DxDrawerTypes } from 'devextreme-angular/ui/drawer';\r\nimport { DxScrollViewModule, DxScrollViewComponent } from 'devextreme-angular/ui/scroll-view';\r\n\r\nimport { SideNavigationMenuComponent, HeaderComponent } from '../../shared/components';\r\nimport { ScreenService, ThemeService } from '../../shared/services';\r\n\r\n@Component({\r\n  selector: 'app-side-nav-outer-toolbar',\r\n  templateUrl: './side-nav-outer-toolbar.component.html',\r\n  styleUrls: ['./side-nav-outer-toolbar.component.scss'],\r\n  standalone: true,\r\n  imports: [ CommonModule, SideNavigationMenuComponent, DxDrawerModule, HeaderComponent, DxScrollViewModule ],\r\n})\r\nexport class SideNavOuterToolbarComponent implements OnInit {\r\n  @ViewChild(DxScrollViewComponent, { static: true }) scrollView!: DxScrollViewComponent;\r\n  selectedRoute = '';\r\n\r\n  menuOpened!: boolean;\r\n  temporaryMenuOpened = false;\r\n\r\n  @Input()\r\n  title!: string;\r\n\r\n  menuMode: DxDrawerTypes.OpenedStateMode = 'shrink';\r\n  menuRevealMode: DxDrawerTypes.RevealMode = 'expand';\r\n  minMenuSize = 0;\r\n  shaderEnabled = false;\r\n  swatchClassName = 'dx-swatch-additional';\r\n\r\n  constructor(protected themeService: ThemeService, private screen: ScreenService, private router: Router) {\r\n    themeService.isDark.subscribe((isDark) => {\r\n      this.swatchClassName = 'dx-swatch-additional' + (isDark ? '-dark' : '');\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.menuOpened = this.screen.sizes['screen-large'];\r\n\r\n    this.router.events.subscribe(val => {\r\n      if (val instanceof NavigationEnd) {\r\n        this.selectedRoute = val.urlAfterRedirects.split('?')[0];\r\n      }\r\n    });\r\n\r\n    this.screen.changed.subscribe(() => this.updateDrawer());\r\n\r\n    this.updateDrawer();\r\n  }\r\n\r\n  updateDrawer() {\r\n    const isXSmall = this.screen.sizes['screen-x-small'];\r\n    const isLarge = this.screen.sizes['screen-large'];\r\n\r\n    this.menuMode = isLarge ? 'shrink' : 'overlap';\r\n    this.menuRevealMode = isXSmall ? 'slide' : 'expand';\r\n    this.minMenuSize = isXSmall ? 0 : 60;\r\n    this.shaderEnabled = !isLarge;\r\n  }\r\n\r\n  get hideMenuAfterNavigation() {\r\n    return this.menuMode === 'overlap' || this.temporaryMenuOpened;\r\n  }\r\n\r\n  get showMenuAfterClick() {\r\n    return !this.menuOpened;\r\n  }\r\n\r\n  navigationChanged(event: DxTreeViewTypes.ItemClickEvent) {\r\n    const path = (event.itemData as any).path;\r\n    const pointerEvent = event.event;\r\n\r\n    if (path && this.menuOpened) {\r\n      if (event.node?.selected) {\r\n        pointerEvent?.preventDefault();\r\n      } else {\r\n        this.router.navigate([path]);\r\n        this.scrollView.instance.scrollTo(0);\r\n      }\r\n\r\n      if (this.hideMenuAfterNavigation) {\r\n        this.temporaryMenuOpened = false;\r\n        this.menuOpened = false;\r\n        pointerEvent?.stopPropagation();\r\n      }\r\n    } else {\r\n      pointerEvent?.preventDefault();\r\n    }\r\n  }\r\n\r\n  navigationClick() {\r\n    if (this.showMenuAfterClick) {\r\n      this.temporaryMenuOpened = true;\r\n      this.menuOpened = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  flex-direction: column;\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.layout-header {\r\n  z-index: 1505;\r\n}\r\n",
                    "styleUrl": "./side-nav-outer-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "hideMenuAfterNavigation": {
                    "name": "hideMenuAfterNavigation",
                    "getSignature": {
                        "name": "hideMenuAfterNavigation",
                        "type": "",
                        "returnType": "",
                        "line": 66
                    }
                },
                "showMenuAfterClick": {
                    "name": "showMenuAfterClick",
                    "getSignature": {
                        "name": "showMenuAfterClick",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                }
            },
            "templateData": "<app-header\r\n  class=\"layout-header\"\r\n  [menuToggleEnabled]=\"true\"\r\n  (menuToggle)=\"menuOpened = !menuOpened;\"\r\n  [title]=\"title\">\r\n</app-header>\r\n\r\n<dx-drawer\r\n  class=\"layout-body\"\r\n  position=\"before\"\r\n  [closeOnOutsideClick]=\"shaderEnabled\"\r\n  [openedStateMode]=\"menuMode\"\r\n  [revealMode]=\"menuRevealMode\"\r\n  [minSize]=\"minMenuSize\"\r\n  [shading]=\"shaderEnabled\"\r\n  [(opened)]=\"menuOpened\">\r\n\r\n  <app-side-navigation-menu\r\n    [compactMode]=\"!menuOpened\"\r\n    [selectedItem]=\"selectedRoute\"\r\n    [ngClass]=\"swatchClassName\"\r\n    *dxTemplate=\"let dataMenu of 'panel'\"\r\n    (selectedItemChanged)=\"navigationChanged($event)\"\r\n    (openMenu)=\"navigationClick()\">\r\n  </app-side-navigation-menu>\r\n\r\n  <dx-scroll-view class=\"with-footer\">\r\n    <div class=\"content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n      <ng-content select=\"app-footer\"></ng-content>\r\n    </div>\r\n  </dx-scroll-view>\r\n</dx-drawer>\r\n"
        },
        {
            "name": "SingleCardComponent",
            "id": "component-SingleCardComponent-bdeb2ab09f730d3f782d91e3b7577d2eb6923ee28038ba3772ef92cbb36dc6209fe1a669ceccfe482ca03f6e06d89ed20dab80c10c1db155f33d0807554db9a9",
            "file": "src/app/layouts/single-card/single-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-single-card",
            "styleUrls": [
                "./single-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./single-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DxScrollViewModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxScrollViewModule }  from 'devextreme-angular/ui/scroll-view';\r\n\r\n@Component({\r\n  selector: 'app-single-card',\r\n  templateUrl: './single-card.component.html',\r\n  styleUrls: ['./single-card.component.scss'],\r\n  standalone: true,\r\n  imports: [ CommonModule, DxScrollViewModule ],\r\n})\r\nexport class SingleCardComponent {\r\n  @Input()\r\n  title!: string;\r\n\r\n  @Input()\r\n  description!: string;\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.single-card {\r\n  .dx-card {\r\n    width: 360px;\r\n    margin: auto auto;\r\n    padding: 24px;\r\n    flex-grow: 0;\r\n    border-radius: 8px;\r\n\r\n    :host-context(.screen-x-small) & {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 0;\r\n      box-shadow: none;\r\n      margin: 0;\r\n      border: 0;\r\n      flex-grow: 1;\r\n    }\r\n\r\n    .header {\r\n      margin: 24px 0;\r\n\r\n      .title {\r\n        color: var(--base-text-color);\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n        text-align: center;\r\n        line-height: 24px;\r\n      }\r\n\r\n      .description {\r\n        color: var(--base-text-color-alpha-7);\r\n        line-height: 16px;\r\n        font-size: 12px;\r\n        margin-top: 32px;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./single-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "templateData": "<dx-scroll-view height=\"100%\" width=\"100%\" class=\"with-footer single-card\">\r\n  <div class=\"dx-card content\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">{{title}}</div>\r\n      <div class=\"description\">{{description}}</div>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</dx-scroll-view>\r\n"
        },
        {
            "name": "TasksComponent",
            "id": "component-TasksComponent-ad485c59711d8603fb20848ab22ee81e144c4dbfa8c676de2fdac0d1678eb03785e83e08de80e82fb775051fd714ab2566ab1aab03485ada63a542a2693a2e05",
            "file": "src/app/pages/tasks/tasks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "tasks.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tasks.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "priority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DxDataGridModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { DxDataGridModule } from 'devextreme-angular/ui/data-grid';\r\n\r\n@Component({\r\n  templateUrl: 'tasks.component.html',\r\n  styleUrls: ['tasks.component.scss'],\r\n  standalone: true,\r\n  imports: [DxDataGridModule]\r\n})\r\n\r\nexport class TasksComponent {\r\n  dataSource: any;\r\n  priority: any[];\r\n\r\n  constructor() {\r\n    this.dataSource = {\r\n      store: {\r\n        version: 2,\r\n        type: 'odata',\r\n        key: 'Task_ID',\r\n        url: 'https://js.devexpress.com/Demos/DevAV/odata/Tasks'\r\n      },\r\n      expand: 'ResponsibleEmployee',\r\n      select: [\r\n        'Task_ID',\r\n        'Task_Subject',\r\n        'Task_Start_Date',\r\n        'Task_Due_Date',\r\n        'Task_Status',\r\n        'Task_Priority',\r\n        'Task_Completion',\r\n        'ResponsibleEmployee/Employee_Full_Name'\r\n      ]\r\n    };\r\n    this.priority = [\r\n      { name: 'High', value: 4 },\r\n      { name: 'Urgent', value: 3 },\r\n      { name: 'Normal', value: 2 },\r\n      { name: 'Low', value: 1 }\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep .dx-datagrid-filter-row {\r\n  background-color: transparent;\r\n}\r\n",
                    "styleUrl": "tasks.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<h2>Tasks</h2>\r\n\r\n<dx-data-grid\r\n  class=\"dx-card content-block\"\r\n  [dataSource]=\"dataSource\"\r\n  [showBorders]=\"false\"\r\n  [focusedRowEnabled]=\"true\"\r\n  [focusedRowIndex]=\"0\"\r\n  [columnAutoWidth]=\"true\"\r\n  [columnHidingEnabled]=\"true\">\r\n\r\n  <dxo-data-grid-paging [pageSize]=\"10\"></dxo-data-grid-paging>\r\n  <dxo-data-grid-pager [showPageSizeSelector]=\"true\" [showInfo]=\"true\"></dxo-data-grid-pager>\r\n  <dxo-data-grid-filter-row [visible]=\"true\"></dxo-data-grid-filter-row>\r\n\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_ID\"\r\n    [width]=\"90\"\r\n    [hidingPriority]=\"2\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Subject\"\r\n    [width]=\"190\"\r\n    caption=\"Subject\"\r\n    [hidingPriority]=\"8\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Status\"\r\n    caption=\"Status\"\r\n    [hidingPriority]=\"6\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Priority\"\r\n    caption=\"Priority\"\r\n    [hidingPriority]=\"5\">\r\n    <dxo-data-grid-lookup\r\n      [dataSource]=\"priority\"\r\n      valueExpr=\"value\"\r\n      displayExpr=\"name\">\r\n    </dxo-data-grid-lookup>\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"ResponsibleEmployee.Employee_Full_Name\"\r\n    caption=\"Assigned To\"\r\n    [allowSorting]=\"false\"\r\n    [hidingPriority]=\"7\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Start_Date\"\r\n    caption=\"Start Date\"\r\n    dataType=\"date\"\r\n    [hidingPriority]=\"3\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Due_Date\"\r\n    caption=\"Due Date\"\r\n    dataType=\"date\"\r\n    [hidingPriority]=\"4\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Priority\"\r\n    caption=\"Priority\"\r\n    name=\"Priority\"\r\n    [hidingPriority]=\"1\">\r\n  </dxi-data-grid-column>\r\n  <dxi-data-grid-column\r\n    dataField=\"Task_Completion\"\r\n    caption=\"Completion\"\r\n    [hidingPriority]=\"0\">\r\n  </dxi-data-grid-column>\r\n</dx-data-grid>\r\n"
        },
        {
            "name": "ThemeSwitcherComponent",
            "id": "component-ThemeSwitcherComponent-f8e15daa3f14ece7aec4d172ef421abe269498f99cafd4b7bdd772a677c651801b98f6af29d993fa47e5079e5920a5baac5637a8027ca04d024c826b1ad34f01",
            "file": "src/app/shared/components/theme-switcher/theme-switcher.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-switcher",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-button\n  class=\"theme-button\"\n  stylingMode=\"text\"\n  [icon]=\"themeService.currentTheme === 'dark' ? 'sun' : 'moon'\"\n  (onClick)=\"onButtonClick()\"\n></dx-button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DxButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxButtonModule } from 'devextreme-angular';\r\nimport { ThemeService } from '../../services/theme.service';\r\n\r\n@Component({\r\n  selector: 'theme-switcher',\r\n  template: `\r\n    <dx-button\r\n      class=\"theme-button\"\r\n      stylingMode=\"text\"\r\n      [icon]=\"themeService.currentTheme === 'dark' ? 'sun' : 'moon'\"\r\n      (onClick)=\"onButtonClick()\"\r\n    ></dx-button>`,\r\n  styleUrls: [],\r\n  standalone: true,\r\n  imports: [CommonModule, DxButtonModule],\r\n})\r\nexport class ThemeSwitcherComponent {\r\n  constructor(public themeService: ThemeService) {}\r\n\r\n  onButtonClick () {\r\n    this.themeService.switchTheme();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "UnauthenticatedContentComponent",
            "id": "component-UnauthenticatedContentComponent-b2ad76f75fe7d404727268e4019dfad91505ff8bd6099b083c928edaf02505e8833b302ee77e3ce5b433148322bcb3e7c831773eaa16b9c71854c82c28a7ea38",
            "file": "src/app/unauthenticated-content.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-unauthenticated-content",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      width: 100%;\n      height: 100%;\n    }\n  "
            ],
            "template": "<app-single-card [title]=\"title\" [description]=\"description\">\n  <router-outlet></router-outlet>\n</app-single-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "SingleCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SingleCardComponent } from './layouts';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-unauthenticated-content',\r\n  template: `\r\n    <app-single-card [title]=\"title\" [description]=\"description\">\r\n      <router-outlet></router-outlet>\r\n    </app-single-card>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SingleCardComponent,\r\n  ]\r\n})\r\nexport class UnauthenticatedContentComponent {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  get title() {\r\n    const path = this.router.url.split('/')[1];\r\n    switch (path) {\r\n      case 'login-form': return 'Sign In';\r\n      case 'reset-password': return 'Reset Password';\r\n      case 'create-account': return 'Sign Up';\r\n      case 'change-password': return 'Change Password';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n  get description() {\r\n    const path = this.router.url.split('/')[1];\r\n    switch (path) {\r\n      case 'reset-password': return 'Please enter the email address that you used to register, and we will send you a link to reset your password via Email.';\r\n      default: return '';\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      width: 100%;\n      height: 100%;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "description": {
                    "name": "description",
                    "getSignature": {
                        "name": "description",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            }
        },
        {
            "name": "UserPanelComponent",
            "id": "component-UserPanelComponent-fd74db2fdf3b96b0aa55b974ec7da1cf999455f0fb4cc0fbbe547cb2def7f16d66c9dbcf5d3f0e3da5ea8591b1f319d188a4bfdd222fa814f9c83da99470f3fc",
            "file": "src/app/shared/components/user-panel/user-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-panel",
            "styleUrls": [
                "./user-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "user-panel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "menuMode",
                    "defaultValue": "'context'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DxListModule",
                    "type": "module"
                },
                {
                    "name": "DxContextMenuModule",
                    "type": "module"
                },
                {
                    "name": "DxDropDownButtonModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DxListModule } from 'devextreme-angular/ui/list';\r\nimport { DxDropDownButtonModule } from 'devextreme-angular/ui/drop-down-button';\r\nimport { DxContextMenuModule } from 'devextreme-angular/ui/context-menu';\r\n\r\n@Component({\r\n  selector: 'app-user-panel',\r\n  templateUrl: 'user-panel.component.html',\r\n  styleUrls: ['./user-panel.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    DxListModule,\r\n    DxContextMenuModule,\r\n    DxDropDownButtonModule,\r\n    CommonModule\r\n  ]\r\n})\r\nexport class UserPanelComponent {\r\n  @Input()\r\n  menuItems: any;\r\n\r\n  @Input()\r\n  menuMode = 'context';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".user-panel ::ng-deep {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ::ng-deep .app .header-toolbar & .user-button.dx-dropdownbutton img.dx-icon {\r\n    height: 100%;\r\n    width: auto;\r\n\r\n    ::ng-deep .dx-theme-generic & {\r\n      max-height: 32px;\r\n    }\r\n  }\r\n\r\n  .user-button.dx-dropdownbutton {\r\n    margin-left: 5px;\r\n\r\n    img.dx-icon {\r\n      border-radius: 50%;\r\n      margin: 0;\r\n      width: auto;\r\n      aspect-ratio: 1 / 1;\r\n      box-sizing: border-box;\r\n      border: 1px solid var(--dx-color-border);\r\n      object-fit: cover;\r\n      object-position: top;\r\n      background: rgb(255, 255, 255);\r\n      background-clip: padding-box;\r\n    }\r\n\r\n    .dx-buttongroup {\r\n      vertical-align: middle;\r\n\r\n      .dx-button.dx-button-has-icon:not(.dx-button-has-text) {\r\n        .dx-button-content {\r\n          padding: 0;\r\n        }\r\n\r\n        &.dx-state-hover,\r\n        &.dx-state-focused {\r\n          background-color: transparent;\r\n\r\n          img.dx-icon {\r\n            border-color: var(--dx-color-primary);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./user-panel.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"user-panel\">\r\n  <dx-drop-down-button\r\n    *ngIf=\"menuMode !== 'list'\"\r\n    stylingMode=\"text\"\r\n    [icon]=\"'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\"\r\n    [showArrowIcon]=\"false\"\r\n    [items]=\"menuItems\"\r\n    displayExpr=\"text\"\r\n    keyExpr=\"id\"\r\n    [elementAttr]=\"{class: 'user-button'}\"\r\n    [dropDownOptions]=\"{width: '150px'}\">\r\n  </dx-drop-down-button>\r\n  <dx-list\r\n    *ngIf=\"menuMode === 'list'\"\r\n    displayExpr=\"text\"\r\n    keyExpr=\"id\"\r\n    width=\"130\"\r\n    [items]=\"menuItems\">\r\n  </dx-list>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes, withHashLocation()),\r\n    AuthGuardService,\r\n    AuthService,\r\n    ScreenService,\r\n    AppInfoService,\r\n  ]\r\n}"
            },
            {
                "name": "defaultPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/'"
            },
            {
                "name": "defaultUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n}"
            },
            {
                "name": "navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-navigation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    text: 'Home',\r\n    path: '/home',\r\n    icon: 'home'\r\n  },\r\n  {\r\n    text: 'Examples',\r\n    icon: 'folder',\r\n    items: [\r\n      {\r\n        text: 'Profile',\r\n        path: '/profile'\r\n      },\r\n      {\r\n        text: 'Tasks',\r\n        path: '/tasks'\r\n      }\r\n    ]\r\n  }\r\n]"
            },
            {
                "name": "notificationText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/reset-password-form/reset-password-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'We\\'ve sent a link to reset your password. Check your inbox.'"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "[\r\n  {\r\n    path: 'tasks',\r\n    component: TasksComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'login-form',\r\n    component: LoginFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'reset-password',\r\n    component: ResetPasswordFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'create-account',\r\n    component: CreateAccountFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'change-password/:recoveryCode',\r\n    component: ChangePasswordFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home'\r\n  }\r\n]"
            },
            {
                "name": "themeClassNamePrefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/theme.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dx-swatch-'"
            },
            {
                "name": "themes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/services/theme.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "['light', 'dark'] as const"
            }
        ],
        "functions": [
            {
                "name": "getNextTheme",
                "file": "src/app/shared/services/theme.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "theme",
                        "type": "Theme",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "theme",
                        "type": "Theme",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Theme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/services/theme.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes, withHashLocation()),\r\n    AuthGuardService,\r\n    AuthService,\r\n    ScreenService,\r\n    AppInfoService,\r\n  ]\r\n}"
                }
            ],
            "src/app/shared/services/auth.service.ts": [
                {
                    "name": "defaultPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/'"
                },
                {
                    "name": "defaultUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  email: 'sandra@example.com',\r\n  avatarUrl: 'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png'\r\n}"
                }
            ],
            "src/app/app-navigation.ts": [
                {
                    "name": "navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-navigation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    text: 'Home',\r\n    path: '/home',\r\n    icon: 'home'\r\n  },\r\n  {\r\n    text: 'Examples',\r\n    icon: 'folder',\r\n    items: [\r\n      {\r\n        text: 'Profile',\r\n        path: '/profile'\r\n      },\r\n      {\r\n        text: 'Tasks',\r\n        path: '/tasks'\r\n      }\r\n    ]\r\n  }\r\n]"
                }
            ],
            "src/app/shared/components/reset-password-form/reset-password-form.component.ts": [
                {
                    "name": "notificationText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/reset-password-form/reset-password-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'We\\'ve sent a link to reset your password. Check your inbox.'"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "[\r\n  {\r\n    path: 'tasks',\r\n    component: TasksComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'login-form',\r\n    component: LoginFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'reset-password',\r\n    component: ResetPasswordFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'create-account',\r\n    component: CreateAccountFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: 'change-password/:recoveryCode',\r\n    component: ChangePasswordFormComponent,\r\n    canActivate: [ AuthGuardService ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home'\r\n  }\r\n]"
                }
            ],
            "src/app/shared/services/theme.service.ts": [
                {
                    "name": "themeClassNamePrefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/theme.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dx-swatch-'"
                },
                {
                    "name": "themes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/services/theme.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "['light', 'dark'] as const"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/services/theme.service.ts": [
                {
                    "name": "getNextTheme",
                    "file": "src/app/shared/services/theme.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/services/theme.service.ts": [
                {
                    "name": "Theme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/services/theme.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": [
            {
                "name": "TasksComponent",
                "kind": "component",
                "path": "tasks",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "ProfileComponent",
                "kind": "component",
                "path": "profile",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "HomeComponent",
                "kind": "component",
                "path": "home",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "LoginFormComponent",
                "kind": "component",
                "path": "login-form",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "ResetPasswordFormComponent",
                "kind": "component",
                "path": "reset-password",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "CreateAccountFormComponent",
                "kind": "component",
                "path": "create-account",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "ChangePasswordFormComponent",
                "kind": "component",
                "path": "change-password/:recoveryCode",
                "filename": "src/app/app.routes.ts"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app-navigation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavInnerToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavOuterToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/single-card/single-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SingleCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/not-authorized-container.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotAuthorizedContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tasks/tasks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TasksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/change-password-form/change-password-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangePasswordFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/create-account-form/create-account-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateAccountFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/login-form/login-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/reset-password-form/reset-password-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/reset-password-form/reset-password-form.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "notificationText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/side-navigation-menu/side-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/theme-switcher/theme-switcher.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeSwitcherComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/user-panel/user-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/app-info.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppInfoService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseFeatures",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StartupResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/screen.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ScreenService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/theme.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getNextTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/theme.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "themeClassNamePrefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/theme.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "themes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/theme.service.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Theme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/unauthenticated-content.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnauthenticatedContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}